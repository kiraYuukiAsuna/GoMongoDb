// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/Response.proto

#include "Message/Response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR CreateUserResponse::CreateUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUserResponseDefaultTypeInternal() {}
  union {
    CreateUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUserResponseDefaultTypeInternal _CreateUserResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteUserResponse::DeleteUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUserResponseDefaultTypeInternal() {}
  union {
    DeleteUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUserResponseDefaultTypeInternal _DeleteUserResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateUserResponse::UpdateUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserResponseDefaultTypeInternal() {}
  union {
    UpdateUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserResponseDefaultTypeInternal _UpdateUserResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserResponse::GetUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserResponseDefaultTypeInternal() {}
  union {
    GetUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserResponseDefaultTypeInternal _GetUserResponse_default_instance_;
PROTOBUF_CONSTEXPR UserLoginResponse::UserLoginResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLoginResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLoginResponseDefaultTypeInternal() {}
  union {
    UserLoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLoginResponseDefaultTypeInternal _UserLoginResponse_default_instance_;
PROTOBUF_CONSTEXPR UserLogoutResponse::UserLogoutResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLogoutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLogoutResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLogoutResponseDefaultTypeInternal() {}
  union {
    UserLogoutResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLogoutResponseDefaultTypeInternal _UserLogoutResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUsersResponse::GetUsersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userinfo_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUsersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUsersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUsersResponseDefaultTypeInternal() {}
  union {
    GetUsersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUsersResponseDefaultTypeInternal _GetUsersResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permissiongroup_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserPermissionGroupResponseDefaultTypeInternal() {}
  union {
    GetUserPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserPermissionGroupResponseDefaultTypeInternal _GetUserPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPermissionGroupResponse::GetPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permissiongrouplist_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermissionGroupResponseDefaultTypeInternal() {}
  union {
    GetPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermissionGroupResponseDefaultTypeInternal _GetPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPermissionGroupsResponse::GetPermissionGroupsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.permissiongrouplist_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPermissionGroupsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermissionGroupsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermissionGroupsResponseDefaultTypeInternal() {}
  union {
    GetPermissionGroupsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermissionGroupsResponseDefaultTypeInternal _GetPermissionGroupsResponse_default_instance_;
PROTOBUF_CONSTEXPR ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permissiongroup_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeUserPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeUserPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeUserPermissionGroupResponseDefaultTypeInternal() {}
  union {
    ChangeUserPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeUserPermissionGroupResponseDefaultTypeInternal _ChangeUserPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateProjectResponse::CreateProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProjectResponseDefaultTypeInternal() {}
  union {
    CreateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProjectResponseDefaultTypeInternal _CreateProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteProjectResponse::DeleteProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteProjectResponseDefaultTypeInternal() {}
  union {
    DeleteProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteProjectResponseDefaultTypeInternal _DeleteProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateProjectResponse::UpdateProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateProjectResponseDefaultTypeInternal() {}
  union {
    UpdateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateProjectResponseDefaultTypeInternal _UpdateProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR GetProjectResponse::GetProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProjectResponseDefaultTypeInternal() {}
  union {
    GetProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProjectResponseDefaultTypeInternal _GetProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR GetProjectsResponse::GetProjectsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.projectinfo_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetProjectsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProjectsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProjectsResponseDefaultTypeInternal() {}
  union {
    GetProjectsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProjectsResponseDefaultTypeInternal _GetProjectsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcResponse::CreateSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcResponseDefaultTypeInternal() {}
  union {
    CreateSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcResponseDefaultTypeInternal _CreateSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcResponse::DeleteSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcResponseDefaultTypeInternal() {}
  union {
    DeleteSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcResponseDefaultTypeInternal _DeleteSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcResponse::UpdateSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcResponseDefaultTypeInternal() {}
  union {
    UpdateSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcResponseDefaultTypeInternal _UpdateSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetSwcMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcMetaInfoResponseDefaultTypeInternal _GetSwcMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcsMetaInfoResponse::GetSwcsMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcinfo_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcsMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcsMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcsMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetSwcsMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcsMetaInfoResponseDefaultTypeInternal _GetSwcsMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    CreateSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcNodeDataResponseDefaultTypeInternal _CreateSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    DeleteSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcNodeDataResponseDefaultTypeInternal _DeleteSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    UpdateSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcNodeDataResponseDefaultTypeInternal _UpdateSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcNodeDataResponse::GetSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    GetSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcNodeDataResponseDefaultTypeInternal _GetSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcsNodeDataResponse::GetSwcsNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcsNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcsNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcsNodeDataResponseDefaultTypeInternal() {}
  union {
    GetSwcsNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcsNodeDataResponseDefaultTypeInternal _GetSwcsNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcsNodeDataByTimeAndUserResponse::GetSwcsNodeDataByTimeAndUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcsNodeDataByTimeAndUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcsNodeDataByTimeAndUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcsNodeDataByTimeAndUserResponseDefaultTypeInternal() {}
  union {
    GetSwcsNodeDataByTimeAndUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcsNodeDataByTimeAndUserResponseDefaultTypeInternal _GetSwcsNodeDataByTimeAndUserResponse_default_instance_;
PROTOBUF_CONSTEXPR BackupFullDatabaseReponse::BackupFullDatabaseReponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.delaybackuptime_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_.instantbackup_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BackupFullDatabaseReponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackupFullDatabaseReponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackupFullDatabaseReponseDefaultTypeInternal() {}
  union {
    BackupFullDatabaseReponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackupFullDatabaseReponseDefaultTypeInternal _BackupFullDatabaseReponse_default_instance_;
PROTOBUF_CONSTEXPR CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    CreateDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDailyStatisticsResponseDefaultTypeInternal _CreateDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    DeleteDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDailyStatisticsResponseDefaultTypeInternal _DeleteDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    UpdateDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDailyStatisticsResponseDefaultTypeInternal _UpdateDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDailyStatisticsResponse::GetDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dailystatisticsinfo_)*/{}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    GetDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDailyStatisticsResponseDefaultTypeInternal _GetDailyStatisticsResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_Message_2fResponse_2eproto[32];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message_2fResponse_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2fResponse_2eproto = nullptr;

const uint32_t TableStruct_Message_2fResponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutResponse, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUsersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUsersResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUsersResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUsersResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _impl_.permissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _impl_.permissiongrouplist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupsResponse, _impl_.permissiongrouplist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _impl_.permissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectsResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsMetaInfoResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsMetaInfoResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsMetaInfoResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataByTimeAndUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataByTimeAndUserResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataByTimeAndUserResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcsNodeDataByTimeAndUserResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseReponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseReponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseReponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseReponse, _impl_.instantbackup_),
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseReponse, _impl_.delaybackuptime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::CreateUserResponse)},
  { 9, -1, -1, sizeof(::proto::DeleteUserResponse)},
  { 18, -1, -1, sizeof(::proto::UpdateUserResponse)},
  { 27, -1, -1, sizeof(::proto::GetUserResponse)},
  { 36, -1, -1, sizeof(::proto::UserLoginResponse)},
  { 45, -1, -1, sizeof(::proto::UserLogoutResponse)},
  { 53, -1, -1, sizeof(::proto::GetUsersResponse)},
  { 62, -1, -1, sizeof(::proto::GetUserPermissionGroupResponse)},
  { 71, -1, -1, sizeof(::proto::GetPermissionGroupResponse)},
  { 80, -1, -1, sizeof(::proto::GetPermissionGroupsResponse)},
  { 89, -1, -1, sizeof(::proto::ChangeUserPermissionGroupResponse)},
  { 98, -1, -1, sizeof(::proto::CreateProjectResponse)},
  { 107, -1, -1, sizeof(::proto::DeleteProjectResponse)},
  { 116, -1, -1, sizeof(::proto::UpdateProjectResponse)},
  { 125, -1, -1, sizeof(::proto::GetProjectResponse)},
  { 134, -1, -1, sizeof(::proto::GetProjectsResponse)},
  { 143, -1, -1, sizeof(::proto::CreateSwcResponse)},
  { 152, -1, -1, sizeof(::proto::DeleteSwcResponse)},
  { 161, -1, -1, sizeof(::proto::UpdateSwcResponse)},
  { 170, -1, -1, sizeof(::proto::GetSwcMetaInfoResponse)},
  { 179, -1, -1, sizeof(::proto::GetSwcsMetaInfoResponse)},
  { 188, -1, -1, sizeof(::proto::CreateSwcNodeDataResponse)},
  { 197, -1, -1, sizeof(::proto::DeleteSwcNodeDataResponse)},
  { 206, -1, -1, sizeof(::proto::UpdateSwcNodeDataResponse)},
  { 215, -1, -1, sizeof(::proto::GetSwcNodeDataResponse)},
  { 224, -1, -1, sizeof(::proto::GetSwcsNodeDataResponse)},
  { 233, -1, -1, sizeof(::proto::GetSwcsNodeDataByTimeAndUserResponse)},
  { 242, -1, -1, sizeof(::proto::BackupFullDatabaseReponse)},
  { 252, -1, -1, sizeof(::proto::CreateDailyStatisticsResponse)},
  { 261, -1, -1, sizeof(::proto::DeleteDailyStatisticsResponse)},
  { 270, -1, -1, sizeof(::proto::UpdateDailyStatisticsResponse)},
  { 279, -1, -1, sizeof(::proto::GetDailyStatisticsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_CreateUserResponse_default_instance_._instance,
  &::proto::_DeleteUserResponse_default_instance_._instance,
  &::proto::_UpdateUserResponse_default_instance_._instance,
  &::proto::_GetUserResponse_default_instance_._instance,
  &::proto::_UserLoginResponse_default_instance_._instance,
  &::proto::_UserLogoutResponse_default_instance_._instance,
  &::proto::_GetUsersResponse_default_instance_._instance,
  &::proto::_GetUserPermissionGroupResponse_default_instance_._instance,
  &::proto::_GetPermissionGroupResponse_default_instance_._instance,
  &::proto::_GetPermissionGroupsResponse_default_instance_._instance,
  &::proto::_ChangeUserPermissionGroupResponse_default_instance_._instance,
  &::proto::_CreateProjectResponse_default_instance_._instance,
  &::proto::_DeleteProjectResponse_default_instance_._instance,
  &::proto::_UpdateProjectResponse_default_instance_._instance,
  &::proto::_GetProjectResponse_default_instance_._instance,
  &::proto::_GetProjectsResponse_default_instance_._instance,
  &::proto::_CreateSwcResponse_default_instance_._instance,
  &::proto::_DeleteSwcResponse_default_instance_._instance,
  &::proto::_UpdateSwcResponse_default_instance_._instance,
  &::proto::_GetSwcMetaInfoResponse_default_instance_._instance,
  &::proto::_GetSwcsMetaInfoResponse_default_instance_._instance,
  &::proto::_CreateSwcNodeDataResponse_default_instance_._instance,
  &::proto::_DeleteSwcNodeDataResponse_default_instance_._instance,
  &::proto::_UpdateSwcNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcsNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcsNodeDataByTimeAndUserResponse_default_instance_._instance,
  &::proto::_BackupFullDatabaseReponse_default_instance_._instance,
  &::proto::_CreateDailyStatisticsResponse_default_instance_._instance,
  &::proto::_DeleteDailyStatisticsResponse_default_instance_._instance,
  &::proto::_UpdateDailyStatisticsResponse_default_instance_._instance,
  &::proto::_GetDailyStatisticsResponse_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2fResponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026Message/Response.proto\022\005proto\032\037google/"
  "protobuf/timestamp.proto\032\025Message/Messag"
  "e.proto\"^\n\022CreateUserResponse\022\016\n\006status\030"
  "\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022\'\n\010UserInfo\030\003 \001(\013"
  "2\025.proto.UserMetaInfoV1\"^\n\022DeleteUserRes"
  "ponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022\'"
  "\n\010UserInfo\030\003 \001(\0132\025.proto.UserMetaInfoV1\""
  "^\n\022UpdateUserResponse\022\016\n\006status\030\001 \001(\010\022\017\n"
  "\007Message\030\002 \001(\t\022\'\n\010UserInfo\030\003 \001(\0132\025.proto"
  ".UserMetaInfoV1\"[\n\017GetUserResponse\022\016\n\006st"
  "atus\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022\'\n\010UserInfo\030"
  "\003 \001(\0132\025.proto.UserMetaInfoV1\"]\n\021UserLogi"
  "nResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001"
  "(\t\022\'\n\010UserInfo\030\003 \001(\0132\025.proto.UserMetaInf"
  "oV1\"5\n\022UserLogoutResponse\022\016\n\006status\030\001 \001("
  "\010\022\017\n\007Message\030\002 \001(\t\"\\\n\020GetUsersResponse\022\016"
  "\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022\'\n\010UserI"
  "nfo\030\003 \003(\0132\025.proto.UserMetaInfoV1\"|\n\036GetU"
  "serPermissionGroupResponse\022\016\n\006status\030\001 \001"
  "(\010\022\017\n\007Message\030\002 \001(\t\0229\n\017PermissionGroup\030\003"
  " \001(\0132 .proto.PermissionGroupMetaInfoV1\"|"
  "\n\032GetPermissionGroupResponse\022\016\n\006status\030\001"
  " \001(\010\022\017\n\007Message\030\002 \001(\t\022=\n\023PermissionGroup"
  "List\030\003 \001(\0132 .proto.PermissionGroupMetaIn"
  "foV1\"}\n\033GetPermissionGroupsResponse\022\016\n\006s"
  "tatus\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022=\n\023Permissi"
  "onGroupList\030\003 \003(\0132 .proto.PermissionGrou"
  "pMetaInfoV1\"\177\n!ChangeUserPermissionGroup"
  "Response\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001("
  "\t\0229\n\017PermissionGroup\030\003 \001(\0132 .proto.Permi"
  "ssionGroupMetaInfoV1\"g\n\025CreateProjectRes"
  "ponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022-"
  "\n\013ProjectInfo\030\003 \001(\0132\030.proto.ProjectMetaI"
  "nfoV1\"g\n\025DeleteProjectResponse\022\016\n\006status"
  "\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022-\n\013ProjectInfo\030\003"
  " \001(\0132\030.proto.ProjectMetaInfoV1\"g\n\025Update"
  "ProjectResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Messa"
  "ge\030\002 \001(\t\022-\n\013ProjectInfo\030\003 \001(\0132\030.proto.Pr"
  "ojectMetaInfoV1\"d\n\022GetProjectResponse\022\016\n"
  "\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022-\n\013Projec"
  "tInfo\030\003 \001(\0132\030.proto.ProjectMetaInfoV1\"e\n"
  "\023GetProjectsResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007"
  "Message\030\002 \001(\t\022-\n\013ProjectInfo\030\003 \003(\0132\030.pro"
  "to.ProjectMetaInfoV1\"[\n\021CreateSwcRespons"
  "e\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022%\n\007Sw"
  "cInfo\030\003 \001(\0132\024.proto.SwcMetaInfoV1\"[\n\021Del"
  "eteSwcResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Messag"
  "e\030\002 \001(\t\022%\n\007SwcInfo\030\003 \001(\0132\024.proto.SwcMeta"
  "InfoV1\"[\n\021UpdateSwcResponse\022\016\n\006status\030\001 "
  "\001(\010\022\017\n\007Message\030\002 \001(\t\022%\n\007SwcInfo\030\003 \001(\0132\024."
  "proto.SwcMetaInfoV1\"`\n\026GetSwcMetaInfoRes"
  "ponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022%"
  "\n\007SwcInfo\030\003 \001(\0132\024.proto.SwcMetaInfoV1\"a\n"
  "\027GetSwcsMetaInfoResponse\022\016\n\006status\030\001 \001(\010"
  "\022\017\n\007Message\030\002 \001(\t\022%\n\007SwcInfo\030\003 \003(\0132\024.pro"
  "to.SwcMetaInfoV1\"c\n\031CreateSwcNodeDataRes"
  "ponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022%"
  "\n\013SwcNodeData\030\003 \001(\0132\020.proto.SwcDataV1\"c\n"
  "\031DeleteSwcNodeDataResponse\022\016\n\006status\030\001 \001"
  "(\010\022\017\n\007Message\030\002 \001(\t\022%\n\013SwcNodeData\030\003 \001(\013"
  "2\020.proto.SwcDataV1\"c\n\031UpdateSwcNodeDataR"
  "esponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t"
  "\022%\n\013SwcNodeData\030\003 \001(\0132\020.proto.SwcDataV1\""
  "`\n\026GetSwcNodeDataResponse\022\016\n\006status\030\001 \001("
  "\010\022\017\n\007Message\030\002 \001(\t\022%\n\013SwcNodeData\030\003 \001(\0132"
  "\020.proto.SwcDataV1\"a\n\027GetSwcsNodeDataResp"
  "onse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022%\n"
  "\013SwcNodeData\030\003 \001(\0132\020.proto.SwcDataV1\"n\n$"
  "GetSwcsNodeDataByTimeAndUserResponse\022\016\n\006"
  "status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022%\n\013SwcNode"
  "Data\030\003 \001(\0132\020.proto.SwcDataV1\"\210\001\n\031BackupF"
  "ullDatabaseReponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Me"
  "ssage\030\002 \001(\t\022\025\n\rInstantBackup\030\003 \001(\010\0223\n\017De"
  "layBackupTime\030\004 \001(\0132\032.google.protobuf.Ti"
  "mestamp\"\177\n\035CreateDailyStatisticsResponse"
  "\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001(\t\022=\n\023Dai"
  "lyStatisticsInfo\030\003 \001(\0132 .proto.DailyStat"
  "isticsMetaInfoV1\"\177\n\035DeleteDailyStatistic"
  "sResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Message\030\002 \001"
  "(\t\022=\n\023DailyStatisticsInfo\030\003 \001(\0132 .proto."
  "DailyStatisticsMetaInfoV1\"\177\n\035UpdateDaily"
  "StatisticsResponse\022\016\n\006status\030\001 \001(\010\022\017\n\007Me"
  "ssage\030\002 \001(\t\022=\n\023DailyStatisticsInfo\030\003 \001(\013"
  "2 .proto.DailyStatisticsMetaInfoV1\"|\n\032Ge"
  "tDailyStatisticsResponse\022\016\n\006status\030\001 \001(\010"
  "\022\017\n\007Message\030\002 \001(\t\022=\n\023DailyStatisticsInfo"
  "\030\003 \003(\0132 .proto.DailyStatisticsMetaInfoV1"
  "B\037Z\035DBMS/Generated/proto/responseP\000b\006pro"
  "to3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2fResponse_2eproto_deps[2] = {
  &::descriptor_table_Message_2fMessage_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2fResponse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2fResponse_2eproto = {
    false, false, 3523, descriptor_table_protodef_Message_2fResponse_2eproto,
    "Message/Response.proto",
    &descriptor_table_Message_2fResponse_2eproto_once, descriptor_table_Message_2fResponse_2eproto_deps, 2, 32,
    schemas, file_default_instances, TableStruct_Message_2fResponse_2eproto::offsets,
    file_level_metadata_Message_2fResponse_2eproto, file_level_enum_descriptors_Message_2fResponse_2eproto,
    file_level_service_descriptors_Message_2fResponse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2fResponse_2eproto_getter() {
  return &descriptor_table_Message_2fResponse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2fResponse_2eproto(&descriptor_table_Message_2fResponse_2eproto);
namespace proto {

// ===================================================================

class CreateUserResponse::_Internal {
 public:
  static const ::proto::UserMetaInfoV1& userinfo(const CreateUserResponse* msg);
};

const ::proto::UserMetaInfoV1&
CreateUserResponse::_Internal::userinfo(const CreateUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void CreateUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
CreateUserResponse::CreateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateUserResponse)
}
CreateUserResponse::CreateUserResponse(const CreateUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateUserResponse)
}

inline void CreateUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateUserResponse::~CreateUserResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void CreateUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateUserResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateUserResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateUserResponse)
  return target;
}

size_t CreateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateUserResponse::GetClassData() const { return &_class_data_; }


void CreateUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateUserResponse*>(&to_msg);
  auto& from = static_cast<const CreateUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUserResponse::CopyFrom(const CreateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUserResponse::IsInitialized() const {
  return true;
}

void CreateUserResponse::InternalSwap(CreateUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateUserResponse, _impl_.status_)
      + sizeof(CreateUserResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateUserResponse, _impl_.userinfo_)>(
          reinterpret_cast<char*>(&_impl_.userinfo_),
          reinterpret_cast<char*>(&other->_impl_.userinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[0]);
}

// ===================================================================

class DeleteUserResponse::_Internal {
 public:
  static const ::proto::UserMetaInfoV1& userinfo(const DeleteUserResponse* msg);
};

const ::proto::UserMetaInfoV1&
DeleteUserResponse::_Internal::userinfo(const DeleteUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void DeleteUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
DeleteUserResponse::DeleteUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteUserResponse)
}
DeleteUserResponse::DeleteUserResponse(const DeleteUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteUserResponse)
}

inline void DeleteUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteUserResponse::~DeleteUserResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void DeleteUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteUserResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteUserResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteUserResponse)
  return target;
}

size_t DeleteUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUserResponse::GetClassData() const { return &_class_data_; }


void DeleteUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteUserResponse*>(&to_msg);
  auto& from = static_cast<const DeleteUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserResponse::CopyFrom(const DeleteUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserResponse::IsInitialized() const {
  return true;
}

void DeleteUserResponse::InternalSwap(DeleteUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteUserResponse, _impl_.status_)
      + sizeof(DeleteUserResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(DeleteUserResponse, _impl_.userinfo_)>(
          reinterpret_cast<char*>(&_impl_.userinfo_),
          reinterpret_cast<char*>(&other->_impl_.userinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[1]);
}

// ===================================================================

class UpdateUserResponse::_Internal {
 public:
  static const ::proto::UserMetaInfoV1& userinfo(const UpdateUserResponse* msg);
};

const ::proto::UserMetaInfoV1&
UpdateUserResponse::_Internal::userinfo(const UpdateUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void UpdateUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
UpdateUserResponse::UpdateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateUserResponse)
}
UpdateUserResponse::UpdateUserResponse(const UpdateUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateUserResponse)
}

inline void UpdateUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateUserResponse::~UpdateUserResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void UpdateUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateUserResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateUserResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateUserResponse)
  return target;
}

size_t UpdateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateUserResponse::GetClassData() const { return &_class_data_; }


void UpdateUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateUserResponse*>(&to_msg);
  auto& from = static_cast<const UpdateUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUserResponse::CopyFrom(const UpdateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserResponse::IsInitialized() const {
  return true;
}

void UpdateUserResponse::InternalSwap(UpdateUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUserResponse, _impl_.status_)
      + sizeof(UpdateUserResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateUserResponse, _impl_.userinfo_)>(
          reinterpret_cast<char*>(&_impl_.userinfo_),
          reinterpret_cast<char*>(&other->_impl_.userinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[2]);
}

// ===================================================================

class GetUserResponse::_Internal {
 public:
  static const ::proto::UserMetaInfoV1& userinfo(const GetUserResponse* msg);
};

const ::proto::UserMetaInfoV1&
GetUserResponse::_Internal::userinfo(const GetUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void GetUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
GetUserResponse::GetUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserResponse)
}
GetUserResponse::GetUserResponse(const GetUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetUserResponse)
}

inline void GetUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserResponse::~GetUserResponse() {
  // @@protoc_insertion_point(destructor:proto.GetUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void GetUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetUserResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetUserResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserResponse)
  return target;
}

size_t GetUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserResponse::GetClassData() const { return &_class_data_; }


void GetUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserResponse*>(&to_msg);
  auto& from = static_cast<const GetUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserResponse::CopyFrom(const GetUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserResponse::IsInitialized() const {
  return true;
}

void GetUserResponse::InternalSwap(GetUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserResponse, _impl_.status_)
      + sizeof(GetUserResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetUserResponse, _impl_.userinfo_)>(
          reinterpret_cast<char*>(&_impl_.userinfo_),
          reinterpret_cast<char*>(&other->_impl_.userinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[3]);
}

// ===================================================================

class UserLoginResponse::_Internal {
 public:
  static const ::proto::UserMetaInfoV1& userinfo(const UserLoginResponse* msg);
};

const ::proto::UserMetaInfoV1&
UserLoginResponse::_Internal::userinfo(const UserLoginResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void UserLoginResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
UserLoginResponse::UserLoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLoginResponse)
}
UserLoginResponse::UserLoginResponse(const UserLoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLoginResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UserLoginResponse)
}

inline void UserLoginResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserLoginResponse::~UserLoginResponse() {
  // @@protoc_insertion_point(destructor:proto.UserLoginResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void UserLoginResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLoginResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserLoginResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserLoginResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLoginResponse)
  return target;
}

size_t UserLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLoginResponse::GetClassData() const { return &_class_data_; }


void UserLoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLoginResponse*>(&to_msg);
  auto& from = static_cast<const UserLoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLoginResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLoginResponse::CopyFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginResponse::IsInitialized() const {
  return true;
}

void UserLoginResponse::InternalSwap(UserLoginResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserLoginResponse, _impl_.status_)
      + sizeof(UserLoginResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UserLoginResponse, _impl_.userinfo_)>(
          reinterpret_cast<char*>(&_impl_.userinfo_),
          reinterpret_cast<char*>(&other->_impl_.userinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[4]);
}

// ===================================================================

class UserLogoutResponse::_Internal {
 public:
};

UserLogoutResponse::UserLogoutResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLogoutResponse)
}
UserLogoutResponse::UserLogoutResponse(const UserLogoutResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLogoutResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UserLogoutResponse)
}

inline void UserLogoutResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserLogoutResponse::~UserLogoutResponse() {
  // @@protoc_insertion_point(destructor:proto.UserLogoutResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLogoutResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void UserLogoutResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLogoutResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLogoutResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserLogoutResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLogoutResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLogoutResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserLogoutResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLogoutResponse)
  return target;
}

size_t UserLogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLogoutResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLogoutResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLogoutResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLogoutResponse::GetClassData() const { return &_class_data_; }


void UserLogoutResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLogoutResponse*>(&to_msg);
  auto& from = static_cast<const UserLogoutResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLogoutResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLogoutResponse::CopyFrom(const UserLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLogoutResponse::IsInitialized() const {
  return true;
}

void UserLogoutResponse::InternalSwap(UserLogoutResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLogoutResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[5]);
}

// ===================================================================

class GetUsersResponse::_Internal {
 public:
};

void GetUsersResponse::clear_userinfo() {
  _impl_.userinfo_.Clear();
}
GetUsersResponse::GetUsersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUsersResponse)
}
GetUsersResponse::GetUsersResponse(const GetUsersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUsersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){from._impl_.userinfo_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetUsersResponse)
}

inline void GetUsersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUsersResponse::~GetUsersResponse() {
  // @@protoc_insertion_point(destructor:proto.GetUsersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUsersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.userinfo_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void GetUsersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUsersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userinfo_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUsersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetUsersResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUsersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUsersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetUsersResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .proto.UserMetaInfoV1 UserInfo = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_userinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUsersResponse)
  return target;
}

size_t GetUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUsersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.UserMetaInfoV1 UserInfo = 3;
  total_size += 1UL * this->_internal_userinfo_size();
  for (const auto& msg : this->_impl_.userinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUsersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUsersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUsersResponse::GetClassData() const { return &_class_data_; }


void GetUsersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUsersResponse*>(&to_msg);
  auto& from = static_cast<const GetUsersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUsersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.userinfo_.MergeFrom(from._impl_.userinfo_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUsersResponse::CopyFrom(const GetUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUsersResponse::IsInitialized() const {
  return true;
}

void GetUsersResponse::InternalSwap(GetUsersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.userinfo_.InternalSwap(&other->_impl_.userinfo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUsersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[6]);
}

// ===================================================================

class GetUserPermissionGroupResponse::_Internal {
 public:
  static const ::proto::PermissionGroupMetaInfoV1& permissiongroup(const GetUserPermissionGroupResponse* msg);
};

const ::proto::PermissionGroupMetaInfoV1&
GetUserPermissionGroupResponse::_Internal::permissiongroup(const GetUserPermissionGroupResponse* msg) {
  return *msg->_impl_.permissiongroup_;
}
void GetUserPermissionGroupResponse::clear_permissiongroup() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
}
GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserPermissionGroupResponse)
}
GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(const GetUserPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongroup_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_impl_.permissiongroup_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongroup_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetUserPermissionGroupResponse)
}

inline void GetUserPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongroup_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserPermissionGroupResponse::~GetUserPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.GetUserPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.permissiongroup_;
}

void GetUserPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetUserPermissionGroupResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetUserPermissionGroupResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::permissiongroup(this),
        _Internal::permissiongroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserPermissionGroupResponse)
  return target;
}

size_t GetUserPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongroup_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void GetUserPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const GetUserPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_internal_mutable_permissiongroup()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongroup());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserPermissionGroupResponse::CopyFrom(const GetUserPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserPermissionGroupResponse::IsInitialized() const {
  return true;
}

void GetUserPermissionGroupResponse::InternalSwap(GetUserPermissionGroupResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupResponse, _impl_.status_)
      + sizeof(GetUserPermissionGroupResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupResponse, _impl_.permissiongroup_)>(
          reinterpret_cast<char*>(&_impl_.permissiongroup_),
          reinterpret_cast<char*>(&other->_impl_.permissiongroup_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[7]);
}

// ===================================================================

class GetPermissionGroupResponse::_Internal {
 public:
  static const ::proto::PermissionGroupMetaInfoV1& permissiongrouplist(const GetPermissionGroupResponse* msg);
};

const ::proto::PermissionGroupMetaInfoV1&
GetPermissionGroupResponse::_Internal::permissiongrouplist(const GetPermissionGroupResponse* msg) {
  return *msg->_impl_.permissiongrouplist_;
}
void GetPermissionGroupResponse::clear_permissiongrouplist() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongrouplist_ != nullptr) {
    delete _impl_.permissiongrouplist_;
  }
  _impl_.permissiongrouplist_ = nullptr;
}
GetPermissionGroupResponse::GetPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetPermissionGroupResponse)
}
GetPermissionGroupResponse::GetPermissionGroupResponse(const GetPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongrouplist_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_permissiongrouplist()) {
    _this->_impl_.permissiongrouplist_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongrouplist_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPermissionGroupResponse)
}

inline void GetPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongrouplist_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPermissionGroupResponse::~GetPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.GetPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.permissiongrouplist_;
}

void GetPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongrouplist_ != nullptr) {
    delete _impl_.permissiongrouplist_;
  }
  _impl_.permissiongrouplist_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetPermissionGroupResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongrouplist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetPermissionGroupResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
  if (this->_internal_has_permissiongrouplist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::permissiongrouplist(this),
        _Internal::permissiongrouplist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPermissionGroupResponse)
  return target;
}

size_t GetPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
  if (this->_internal_has_permissiongrouplist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongrouplist_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void GetPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const GetPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_permissiongrouplist()) {
    _this->_internal_mutable_permissiongrouplist()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongrouplist());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermissionGroupResponse::CopyFrom(const GetPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionGroupResponse::IsInitialized() const {
  return true;
}

void GetPermissionGroupResponse::InternalSwap(GetPermissionGroupResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPermissionGroupResponse, _impl_.status_)
      + sizeof(GetPermissionGroupResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetPermissionGroupResponse, _impl_.permissiongrouplist_)>(
          reinterpret_cast<char*>(&_impl_.permissiongrouplist_),
          reinterpret_cast<char*>(&other->_impl_.permissiongrouplist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[8]);
}

// ===================================================================

class GetPermissionGroupsResponse::_Internal {
 public:
};

void GetPermissionGroupsResponse::clear_permissiongrouplist() {
  _impl_.permissiongrouplist_.Clear();
}
GetPermissionGroupsResponse::GetPermissionGroupsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetPermissionGroupsResponse)
}
GetPermissionGroupsResponse::GetPermissionGroupsResponse(const GetPermissionGroupsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPermissionGroupsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.permissiongrouplist_){from._impl_.permissiongrouplist_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPermissionGroupsResponse)
}

inline void GetPermissionGroupsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.permissiongrouplist_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPermissionGroupsResponse::~GetPermissionGroupsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetPermissionGroupsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPermissionGroupsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.permissiongrouplist_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void GetPermissionGroupsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPermissionGroupsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPermissionGroupsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissiongrouplist_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionGroupsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetPermissionGroupsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissiongrouplist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPermissionGroupsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPermissionGroupsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetPermissionGroupsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissiongrouplist_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissiongrouplist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPermissionGroupsResponse)
  return target;
}

size_t GetPermissionGroupsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPermissionGroupsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 3;
  total_size += 1UL * this->_internal_permissiongrouplist_size();
  for (const auto& msg : this->_impl_.permissiongrouplist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPermissionGroupsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPermissionGroupsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPermissionGroupsResponse::GetClassData() const { return &_class_data_; }


void GetPermissionGroupsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPermissionGroupsResponse*>(&to_msg);
  auto& from = static_cast<const GetPermissionGroupsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPermissionGroupsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.permissiongrouplist_.MergeFrom(from._impl_.permissiongrouplist_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermissionGroupsResponse::CopyFrom(const GetPermissionGroupsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPermissionGroupsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionGroupsResponse::IsInitialized() const {
  return true;
}

void GetPermissionGroupsResponse::InternalSwap(GetPermissionGroupsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.permissiongrouplist_.InternalSwap(&other->_impl_.permissiongrouplist_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionGroupsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[9]);
}

// ===================================================================

class ChangeUserPermissionGroupResponse::_Internal {
 public:
  static const ::proto::PermissionGroupMetaInfoV1& permissiongroup(const ChangeUserPermissionGroupResponse* msg);
};

const ::proto::PermissionGroupMetaInfoV1&
ChangeUserPermissionGroupResponse::_Internal::permissiongroup(const ChangeUserPermissionGroupResponse* msg) {
  return *msg->_impl_.permissiongroup_;
}
void ChangeUserPermissionGroupResponse::clear_permissiongroup() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
}
ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ChangeUserPermissionGroupResponse)
}
ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(const ChangeUserPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeUserPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongroup_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_impl_.permissiongroup_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongroup_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.ChangeUserPermissionGroupResponse)
}

inline void ChangeUserPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.permissiongroup_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChangeUserPermissionGroupResponse::~ChangeUserPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.ChangeUserPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeUserPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.permissiongroup_;
}

void ChangeUserPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeUserPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeUserPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ChangeUserPermissionGroupResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeUserPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeUserPermissionGroupResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::permissiongroup(this),
        _Internal::permissiongroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeUserPermissionGroupResponse)
  return target;
}

size_t ChangeUserPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeUserPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongroup_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeUserPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeUserPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeUserPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void ChangeUserPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeUserPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const ChangeUserPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeUserPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_internal_mutable_permissiongroup()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongroup());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeUserPermissionGroupResponse::CopyFrom(const ChangeUserPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeUserPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeUserPermissionGroupResponse::IsInitialized() const {
  return true;
}

void ChangeUserPermissionGroupResponse::InternalSwap(ChangeUserPermissionGroupResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeUserPermissionGroupResponse, _impl_.status_)
      + sizeof(ChangeUserPermissionGroupResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ChangeUserPermissionGroupResponse, _impl_.permissiongroup_)>(
          reinterpret_cast<char*>(&_impl_.permissiongroup_),
          reinterpret_cast<char*>(&other->_impl_.permissiongroup_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeUserPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[10]);
}

// ===================================================================

class CreateProjectResponse::_Internal {
 public:
  static const ::proto::ProjectMetaInfoV1& projectinfo(const CreateProjectResponse* msg);
};

const ::proto::ProjectMetaInfoV1&
CreateProjectResponse::_Internal::projectinfo(const CreateProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void CreateProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
CreateProjectResponse::CreateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateProjectResponse)
}
CreateProjectResponse::CreateProjectResponse(const CreateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateProjectResponse)
}

inline void CreateProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateProjectResponse::~CreateProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void CreateProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateProjectResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateProjectResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateProjectResponse)
  return target;
}

size_t CreateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectResponse::GetClassData() const { return &_class_data_; }


void CreateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProjectResponse*>(&to_msg);
  auto& from = static_cast<const CreateProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectResponse::CopyFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectResponse::IsInitialized() const {
  return true;
}

void CreateProjectResponse::InternalSwap(CreateProjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProjectResponse, _impl_.status_)
      + sizeof(CreateProjectResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateProjectResponse, _impl_.projectinfo_)>(
          reinterpret_cast<char*>(&_impl_.projectinfo_),
          reinterpret_cast<char*>(&other->_impl_.projectinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[11]);
}

// ===================================================================

class DeleteProjectResponse::_Internal {
 public:
  static const ::proto::ProjectMetaInfoV1& projectinfo(const DeleteProjectResponse* msg);
};

const ::proto::ProjectMetaInfoV1&
DeleteProjectResponse::_Internal::projectinfo(const DeleteProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void DeleteProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
DeleteProjectResponse::DeleteProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteProjectResponse)
}
DeleteProjectResponse::DeleteProjectResponse(const DeleteProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteProjectResponse)
}

inline void DeleteProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteProjectResponse::~DeleteProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void DeleteProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteProjectResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteProjectResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteProjectResponse)
  return target;
}

size_t DeleteProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectResponse::GetClassData() const { return &_class_data_; }


void DeleteProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteProjectResponse*>(&to_msg);
  auto& from = static_cast<const DeleteProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectResponse::CopyFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectResponse::IsInitialized() const {
  return true;
}

void DeleteProjectResponse::InternalSwap(DeleteProjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteProjectResponse, _impl_.status_)
      + sizeof(DeleteProjectResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(DeleteProjectResponse, _impl_.projectinfo_)>(
          reinterpret_cast<char*>(&_impl_.projectinfo_),
          reinterpret_cast<char*>(&other->_impl_.projectinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[12]);
}

// ===================================================================

class UpdateProjectResponse::_Internal {
 public:
  static const ::proto::ProjectMetaInfoV1& projectinfo(const UpdateProjectResponse* msg);
};

const ::proto::ProjectMetaInfoV1&
UpdateProjectResponse::_Internal::projectinfo(const UpdateProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void UpdateProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
UpdateProjectResponse::UpdateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateProjectResponse)
}
UpdateProjectResponse::UpdateProjectResponse(const UpdateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateProjectResponse)
}

inline void UpdateProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateProjectResponse::~UpdateProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void UpdateProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateProjectResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateProjectResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateProjectResponse)
  return target;
}

size_t UpdateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProjectResponse::GetClassData() const { return &_class_data_; }


void UpdateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateProjectResponse*>(&to_msg);
  auto& from = static_cast<const UpdateProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProjectResponse::CopyFrom(const UpdateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectResponse::IsInitialized() const {
  return true;
}

void UpdateProjectResponse::InternalSwap(UpdateProjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateProjectResponse, _impl_.status_)
      + sizeof(UpdateProjectResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateProjectResponse, _impl_.projectinfo_)>(
          reinterpret_cast<char*>(&_impl_.projectinfo_),
          reinterpret_cast<char*>(&other->_impl_.projectinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[13]);
}

// ===================================================================

class GetProjectResponse::_Internal {
 public:
  static const ::proto::ProjectMetaInfoV1& projectinfo(const GetProjectResponse* msg);
};

const ::proto::ProjectMetaInfoV1&
GetProjectResponse::_Internal::projectinfo(const GetProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void GetProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
GetProjectResponse::GetProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetProjectResponse)
}
GetProjectResponse::GetProjectResponse(const GetProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetProjectResponse)
}

inline void GetProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.projectinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetProjectResponse::~GetProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.GetProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void GetProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetProjectResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetProjectResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetProjectResponse)
  return target;
}

size_t GetProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectResponse::GetClassData() const { return &_class_data_; }


void GetProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetProjectResponse*>(&to_msg);
  auto& from = static_cast<const GetProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectResponse::CopyFrom(const GetProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectResponse::IsInitialized() const {
  return true;
}

void GetProjectResponse::InternalSwap(GetProjectResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetProjectResponse, _impl_.status_)
      + sizeof(GetProjectResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetProjectResponse, _impl_.projectinfo_)>(
          reinterpret_cast<char*>(&_impl_.projectinfo_),
          reinterpret_cast<char*>(&other->_impl_.projectinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[14]);
}

// ===================================================================

class GetProjectsResponse::_Internal {
 public:
};

void GetProjectsResponse::clear_projectinfo() {
  _impl_.projectinfo_.Clear();
}
GetProjectsResponse::GetProjectsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetProjectsResponse)
}
GetProjectsResponse::GetProjectsResponse(const GetProjectsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetProjectsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.projectinfo_){from._impl_.projectinfo_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetProjectsResponse)
}

inline void GetProjectsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.projectinfo_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetProjectsResponse::~GetProjectsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetProjectsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetProjectsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.projectinfo_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void GetProjectsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetProjectsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetProjectsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.projectinfo_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetProjectsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projectinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetProjectsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetProjectsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetProjectsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_projectinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_projectinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetProjectsResponse)
  return target;
}

size_t GetProjectsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetProjectsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  total_size += 1UL * this->_internal_projectinfo_size();
  for (const auto& msg : this->_impl_.projectinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetProjectsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectsResponse::GetClassData() const { return &_class_data_; }


void GetProjectsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetProjectsResponse*>(&to_msg);
  auto& from = static_cast<const GetProjectsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetProjectsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.projectinfo_.MergeFrom(from._impl_.projectinfo_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectsResponse::CopyFrom(const GetProjectsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetProjectsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectsResponse::IsInitialized() const {
  return true;
}

void GetProjectsResponse::InternalSwap(GetProjectsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.projectinfo_.InternalSwap(&other->_impl_.projectinfo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[15]);
}

// ===================================================================

class CreateSwcResponse::_Internal {
 public:
  static const ::proto::SwcMetaInfoV1& swcinfo(const CreateSwcResponse* msg);
};

const ::proto::SwcMetaInfoV1&
CreateSwcResponse::_Internal::swcinfo(const CreateSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void CreateSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
CreateSwcResponse::CreateSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcResponse)
}
CreateSwcResponse::CreateSwcResponse(const CreateSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcResponse)
}

inline void CreateSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcResponse::~CreateSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void CreateSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcResponse)
  return target;
}

size_t CreateSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcResponse::GetClassData() const { return &_class_data_; }


void CreateSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcResponse::CopyFrom(const CreateSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcResponse::IsInitialized() const {
  return true;
}

void CreateSwcResponse::InternalSwap(CreateSwcResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcResponse, _impl_.status_)
      + sizeof(CreateSwcResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcResponse, _impl_.swcinfo_)>(
          reinterpret_cast<char*>(&_impl_.swcinfo_),
          reinterpret_cast<char*>(&other->_impl_.swcinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[16]);
}

// ===================================================================

class DeleteSwcResponse::_Internal {
 public:
  static const ::proto::SwcMetaInfoV1& swcinfo(const DeleteSwcResponse* msg);
};

const ::proto::SwcMetaInfoV1&
DeleteSwcResponse::_Internal::swcinfo(const DeleteSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void DeleteSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
DeleteSwcResponse::DeleteSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcResponse)
}
DeleteSwcResponse::DeleteSwcResponse(const DeleteSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcResponse)
}

inline void DeleteSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcResponse::~DeleteSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void DeleteSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcResponse)
  return target;
}

size_t DeleteSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcResponse::CopyFrom(const DeleteSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcResponse::IsInitialized() const {
  return true;
}

void DeleteSwcResponse::InternalSwap(DeleteSwcResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcResponse, _impl_.status_)
      + sizeof(DeleteSwcResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcResponse, _impl_.swcinfo_)>(
          reinterpret_cast<char*>(&_impl_.swcinfo_),
          reinterpret_cast<char*>(&other->_impl_.swcinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[17]);
}

// ===================================================================

class UpdateSwcResponse::_Internal {
 public:
  static const ::proto::SwcMetaInfoV1& swcinfo(const UpdateSwcResponse* msg);
};

const ::proto::SwcMetaInfoV1&
UpdateSwcResponse::_Internal::swcinfo(const UpdateSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void UpdateSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
UpdateSwcResponse::UpdateSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcResponse)
}
UpdateSwcResponse::UpdateSwcResponse(const UpdateSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcResponse)
}

inline void UpdateSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateSwcResponse::~UpdateSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void UpdateSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcResponse)
  return target;
}

size_t UpdateSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcResponse::CopyFrom(const UpdateSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcResponse::IsInitialized() const {
  return true;
}

void UpdateSwcResponse::InternalSwap(UpdateSwcResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcResponse, _impl_.status_)
      + sizeof(UpdateSwcResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcResponse, _impl_.swcinfo_)>(
          reinterpret_cast<char*>(&_impl_.swcinfo_),
          reinterpret_cast<char*>(&other->_impl_.swcinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[18]);
}

// ===================================================================

class GetSwcMetaInfoResponse::_Internal {
 public:
  static const ::proto::SwcMetaInfoV1& swcinfo(const GetSwcMetaInfoResponse* msg);
};

const ::proto::SwcMetaInfoV1&
GetSwcMetaInfoResponse::_Internal::swcinfo(const GetSwcMetaInfoResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void GetSwcMetaInfoResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcMetaInfoResponse)
}
GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(const GetSwcMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcMetaInfoResponse)
}

inline void GetSwcMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcMetaInfoResponse::~GetSwcMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void GetSwcMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcMetaInfoResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcMetaInfoResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcMetaInfoResponse)
  return target;
}

size_t GetSwcMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetSwcMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcMetaInfoResponse::CopyFrom(const GetSwcMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetSwcMetaInfoResponse::InternalSwap(GetSwcMetaInfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoResponse, _impl_.status_)
      + sizeof(GetSwcMetaInfoResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoResponse, _impl_.swcinfo_)>(
          reinterpret_cast<char*>(&_impl_.swcinfo_),
          reinterpret_cast<char*>(&other->_impl_.swcinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[19]);
}

// ===================================================================

class GetSwcsMetaInfoResponse::_Internal {
 public:
};

void GetSwcsMetaInfoResponse::clear_swcinfo() {
  _impl_.swcinfo_.Clear();
}
GetSwcsMetaInfoResponse::GetSwcsMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcsMetaInfoResponse)
}
GetSwcsMetaInfoResponse::GetSwcsMetaInfoResponse(const GetSwcsMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcsMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcinfo_){from._impl_.swcinfo_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcsMetaInfoResponse)
}

inline void GetSwcsMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcinfo_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcsMetaInfoResponse::~GetSwcsMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcsMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcsMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcinfo_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void GetSwcsMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcsMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcsMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcinfo_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcsMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcsMetaInfoResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcsMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcsMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcsMetaInfoResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .proto.SwcMetaInfoV1 SwcInfo = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcsMetaInfoResponse)
  return target;
}

size_t GetSwcsMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcsMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcMetaInfoV1 SwcInfo = 3;
  total_size += 1UL * this->_internal_swcinfo_size();
  for (const auto& msg : this->_impl_.swcinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcsMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcsMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcsMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetSwcsMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcsMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcsMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcsMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcinfo_.MergeFrom(from._impl_.swcinfo_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcsMetaInfoResponse::CopyFrom(const GetSwcsMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcsMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcsMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetSwcsMetaInfoResponse::InternalSwap(GetSwcsMetaInfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcinfo_.InternalSwap(&other->_impl_.swcinfo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcsMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[20]);
}

// ===================================================================

class CreateSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const CreateSwcNodeDataResponse* msg);
};

const ::proto::SwcDataV1&
CreateSwcNodeDataResponse::_Internal::swcnodedata(const CreateSwcNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void CreateSwcNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcNodeDataResponse)
}
CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(const CreateSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcNodeDataResponse)
}

inline void CreateSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcNodeDataResponse::~CreateSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void CreateSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcNodeDataResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcNodeDataResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcNodeDataResponse)
  return target;
}

size_t CreateSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void CreateSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcNodeDataResponse::CopyFrom(const CreateSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void CreateSwcNodeDataResponse::InternalSwap(CreateSwcNodeDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcNodeDataResponse, _impl_.status_)
      + sizeof(CreateSwcNodeDataResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcNodeDataResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[21]);
}

// ===================================================================

class DeleteSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const DeleteSwcNodeDataResponse* msg);
};

const ::proto::SwcDataV1&
DeleteSwcNodeDataResponse::_Internal::swcnodedata(const DeleteSwcNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void DeleteSwcNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcNodeDataResponse)
}
DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(const DeleteSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcNodeDataResponse)
}

inline void DeleteSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcNodeDataResponse::~DeleteSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void DeleteSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcNodeDataResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcNodeDataResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcNodeDataResponse)
  return target;
}

size_t DeleteSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcNodeDataResponse::CopyFrom(const DeleteSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void DeleteSwcNodeDataResponse::InternalSwap(DeleteSwcNodeDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcNodeDataResponse, _impl_.status_)
      + sizeof(DeleteSwcNodeDataResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcNodeDataResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[22]);
}

// ===================================================================

class UpdateSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const UpdateSwcNodeDataResponse* msg);
};

const ::proto::SwcDataV1&
UpdateSwcNodeDataResponse::_Internal::swcnodedata(const UpdateSwcNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void UpdateSwcNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcNodeDataResponse)
}
UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(const UpdateSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcNodeDataResponse)
}

inline void UpdateSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateSwcNodeDataResponse::~UpdateSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void UpdateSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcNodeDataResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcNodeDataResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcNodeDataResponse)
  return target;
}

size_t UpdateSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcNodeDataResponse::CopyFrom(const UpdateSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void UpdateSwcNodeDataResponse::InternalSwap(UpdateSwcNodeDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcNodeDataResponse, _impl_.status_)
      + sizeof(UpdateSwcNodeDataResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcNodeDataResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[23]);
}

// ===================================================================

class GetSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcNodeDataResponse* msg);
};

const ::proto::SwcDataV1&
GetSwcNodeDataResponse::_Internal::swcnodedata(const GetSwcNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcNodeDataResponse::GetSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcNodeDataResponse)
}
GetSwcNodeDataResponse::GetSwcNodeDataResponse(const GetSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcNodeDataResponse)
}

inline void GetSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcNodeDataResponse::~GetSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcNodeDataResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcNodeDataResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcNodeDataResponse)
  return target;
}

size_t GetSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void GetSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcNodeDataResponse::CopyFrom(const GetSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void GetSwcNodeDataResponse::InternalSwap(GetSwcNodeDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcNodeDataResponse, _impl_.status_)
      + sizeof(GetSwcNodeDataResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetSwcNodeDataResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[24]);
}

// ===================================================================

class GetSwcsNodeDataResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcsNodeDataResponse* msg);
};

const ::proto::SwcDataV1&
GetSwcsNodeDataResponse::_Internal::swcnodedata(const GetSwcsNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcsNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcsNodeDataResponse::GetSwcsNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcsNodeDataResponse)
}
GetSwcsNodeDataResponse::GetSwcsNodeDataResponse(const GetSwcsNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcsNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcsNodeDataResponse)
}

inline void GetSwcsNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcsNodeDataResponse::~GetSwcsNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcsNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcsNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcsNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcsNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcsNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcsNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcsNodeDataResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcsNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcsNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcsNodeDataResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcsNodeDataResponse)
  return target;
}

size_t GetSwcsNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcsNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcsNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcsNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcsNodeDataResponse::GetClassData() const { return &_class_data_; }


void GetSwcsNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcsNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcsNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcsNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcsNodeDataResponse::CopyFrom(const GetSwcsNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcsNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcsNodeDataResponse::IsInitialized() const {
  return true;
}

void GetSwcsNodeDataResponse::InternalSwap(GetSwcsNodeDataResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcsNodeDataResponse, _impl_.status_)
      + sizeof(GetSwcsNodeDataResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetSwcsNodeDataResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcsNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[25]);
}

// ===================================================================

class GetSwcsNodeDataByTimeAndUserResponse::_Internal {
 public:
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcsNodeDataByTimeAndUserResponse* msg);
};

const ::proto::SwcDataV1&
GetSwcsNodeDataByTimeAndUserResponse::_Internal::swcnodedata(const GetSwcsNodeDataByTimeAndUserResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcsNodeDataByTimeAndUserResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcsNodeDataByTimeAndUserResponse::GetSwcsNodeDataByTimeAndUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcsNodeDataByTimeAndUserResponse)
}
GetSwcsNodeDataByTimeAndUserResponse::GetSwcsNodeDataByTimeAndUserResponse(const GetSwcsNodeDataByTimeAndUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcsNodeDataByTimeAndUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcsNodeDataByTimeAndUserResponse)
}

inline void GetSwcsNodeDataByTimeAndUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.swcnodedata_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcsNodeDataByTimeAndUserResponse::~GetSwcsNodeDataByTimeAndUserResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcsNodeDataByTimeAndUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcsNodeDataByTimeAndUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcsNodeDataByTimeAndUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcsNodeDataByTimeAndUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcsNodeDataByTimeAndUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcsNodeDataByTimeAndUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcsNodeDataByTimeAndUserResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcsNodeDataByTimeAndUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcsNodeDataByTimeAndUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcsNodeDataByTimeAndUserResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcsNodeDataByTimeAndUserResponse)
  return target;
}

size_t GetSwcsNodeDataByTimeAndUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcsNodeDataByTimeAndUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcsNodeDataByTimeAndUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcsNodeDataByTimeAndUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcsNodeDataByTimeAndUserResponse::GetClassData() const { return &_class_data_; }


void GetSwcsNodeDataByTimeAndUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcsNodeDataByTimeAndUserResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcsNodeDataByTimeAndUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcsNodeDataByTimeAndUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcsNodeDataByTimeAndUserResponse::CopyFrom(const GetSwcsNodeDataByTimeAndUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcsNodeDataByTimeAndUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcsNodeDataByTimeAndUserResponse::IsInitialized() const {
  return true;
}

void GetSwcsNodeDataByTimeAndUserResponse::InternalSwap(GetSwcsNodeDataByTimeAndUserResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcsNodeDataByTimeAndUserResponse, _impl_.status_)
      + sizeof(GetSwcsNodeDataByTimeAndUserResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetSwcsNodeDataByTimeAndUserResponse, _impl_.swcnodedata_)>(
          reinterpret_cast<char*>(&_impl_.swcnodedata_),
          reinterpret_cast<char*>(&other->_impl_.swcnodedata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcsNodeDataByTimeAndUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[26]);
}

// ===================================================================

class BackupFullDatabaseReponse::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& delaybackuptime(const BackupFullDatabaseReponse* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
BackupFullDatabaseReponse::_Internal::delaybackuptime(const BackupFullDatabaseReponse* msg) {
  return *msg->_impl_.delaybackuptime_;
}
void BackupFullDatabaseReponse::clear_delaybackuptime() {
  if (GetArenaForAllocation() == nullptr && _impl_.delaybackuptime_ != nullptr) {
    delete _impl_.delaybackuptime_;
  }
  _impl_.delaybackuptime_ = nullptr;
}
BackupFullDatabaseReponse::BackupFullDatabaseReponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.BackupFullDatabaseReponse)
}
BackupFullDatabaseReponse::BackupFullDatabaseReponse(const BackupFullDatabaseReponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BackupFullDatabaseReponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.delaybackuptime_){nullptr}
    , decltype(_impl_.status_){}
    , decltype(_impl_.instantbackup_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_delaybackuptime()) {
    _this->_impl_.delaybackuptime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.delaybackuptime_);
  }
  ::memcpy(&_impl_.status_, &from._impl_.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.instantbackup_) -
    reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.instantbackup_));
  // @@protoc_insertion_point(copy_constructor:proto.BackupFullDatabaseReponse)
}

inline void BackupFullDatabaseReponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.delaybackuptime_){nullptr}
    , decltype(_impl_.status_){false}
    , decltype(_impl_.instantbackup_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BackupFullDatabaseReponse::~BackupFullDatabaseReponse() {
  // @@protoc_insertion_point(destructor:proto.BackupFullDatabaseReponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BackupFullDatabaseReponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.delaybackuptime_;
}

void BackupFullDatabaseReponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BackupFullDatabaseReponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BackupFullDatabaseReponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.delaybackuptime_ != nullptr) {
    delete _impl_.delaybackuptime_;
  }
  _impl_.delaybackuptime_ = nullptr;
  ::memset(&_impl_.status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.instantbackup_) -
      reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.instantbackup_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BackupFullDatabaseReponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.BackupFullDatabaseReponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // bool InstantBackup = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.instantbackup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp DelayBackupTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_delaybackuptime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BackupFullDatabaseReponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.BackupFullDatabaseReponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.BackupFullDatabaseReponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // bool InstantBackup = 3;
  if (this->_internal_instantbackup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_instantbackup(), target);
  }

  // .google.protobuf.Timestamp DelayBackupTime = 4;
  if (this->_internal_has_delaybackuptime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::delaybackuptime(this),
        _Internal::delaybackuptime(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BackupFullDatabaseReponse)
  return target;
}

size_t BackupFullDatabaseReponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BackupFullDatabaseReponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .google.protobuf.Timestamp DelayBackupTime = 4;
  if (this->_internal_has_delaybackuptime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.delaybackuptime_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  // bool InstantBackup = 3;
  if (this->_internal_instantbackup() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BackupFullDatabaseReponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BackupFullDatabaseReponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BackupFullDatabaseReponse::GetClassData() const { return &_class_data_; }


void BackupFullDatabaseReponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BackupFullDatabaseReponse*>(&to_msg);
  auto& from = static_cast<const BackupFullDatabaseReponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.BackupFullDatabaseReponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_delaybackuptime()) {
    _this->_internal_mutable_delaybackuptime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_delaybackuptime());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if (from._internal_instantbackup() != 0) {
    _this->_internal_set_instantbackup(from._internal_instantbackup());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BackupFullDatabaseReponse::CopyFrom(const BackupFullDatabaseReponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BackupFullDatabaseReponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupFullDatabaseReponse::IsInitialized() const {
  return true;
}

void BackupFullDatabaseReponse::InternalSwap(BackupFullDatabaseReponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackupFullDatabaseReponse, _impl_.instantbackup_)
      + sizeof(BackupFullDatabaseReponse::_impl_.instantbackup_)
      - PROTOBUF_FIELD_OFFSET(BackupFullDatabaseReponse, _impl_.delaybackuptime_)>(
          reinterpret_cast<char*>(&_impl_.delaybackuptime_),
          reinterpret_cast<char*>(&other->_impl_.delaybackuptime_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BackupFullDatabaseReponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[27]);
}

// ===================================================================

class CreateDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const CreateDailyStatisticsResponse* msg);
};

const ::proto::DailyStatisticsMetaInfoV1&
CreateDailyStatisticsResponse::_Internal::dailystatisticsinfo(const CreateDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void CreateDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateDailyStatisticsResponse)
}
CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(const CreateDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateDailyStatisticsResponse)
}

inline void CreateDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateDailyStatisticsResponse::~CreateDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void CreateDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateDailyStatisticsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateDailyStatisticsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateDailyStatisticsResponse)
  return target;
}

size_t CreateDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void CreateDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const CreateDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDailyStatisticsResponse::CopyFrom(const CreateDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void CreateDailyStatisticsResponse::InternalSwap(CreateDailyStatisticsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsResponse, _impl_.status_)
      + sizeof(CreateDailyStatisticsResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsResponse, _impl_.dailystatisticsinfo_)>(
          reinterpret_cast<char*>(&_impl_.dailystatisticsinfo_),
          reinterpret_cast<char*>(&other->_impl_.dailystatisticsinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[28]);
}

// ===================================================================

class DeleteDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const DeleteDailyStatisticsResponse* msg);
};

const ::proto::DailyStatisticsMetaInfoV1&
DeleteDailyStatisticsResponse::_Internal::dailystatisticsinfo(const DeleteDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void DeleteDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteDailyStatisticsResponse)
}
DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(const DeleteDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteDailyStatisticsResponse)
}

inline void DeleteDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDailyStatisticsResponse::~DeleteDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void DeleteDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteDailyStatisticsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteDailyStatisticsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteDailyStatisticsResponse)
  return target;
}

size_t DeleteDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void DeleteDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDailyStatisticsResponse::CopyFrom(const DeleteDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void DeleteDailyStatisticsResponse::InternalSwap(DeleteDailyStatisticsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsResponse, _impl_.status_)
      + sizeof(DeleteDailyStatisticsResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsResponse, _impl_.dailystatisticsinfo_)>(
          reinterpret_cast<char*>(&_impl_.dailystatisticsinfo_),
          reinterpret_cast<char*>(&other->_impl_.dailystatisticsinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[29]);
}

// ===================================================================

class UpdateDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const UpdateDailyStatisticsResponse* msg);
};

const ::proto::DailyStatisticsMetaInfoV1&
UpdateDailyStatisticsResponse::_Internal::dailystatisticsinfo(const UpdateDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void UpdateDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateDailyStatisticsResponse)
}
UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(const UpdateDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateDailyStatisticsResponse)
}

inline void UpdateDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateDailyStatisticsResponse::~UpdateDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void UpdateDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateDailyStatisticsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateDailyStatisticsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateDailyStatisticsResponse)
  return target;
}

size_t UpdateDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void UpdateDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDailyStatisticsResponse::CopyFrom(const UpdateDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void UpdateDailyStatisticsResponse::InternalSwap(UpdateDailyStatisticsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsResponse, _impl_.status_)
      + sizeof(UpdateDailyStatisticsResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsResponse, _impl_.dailystatisticsinfo_)>(
          reinterpret_cast<char*>(&_impl_.dailystatisticsinfo_),
          reinterpret_cast<char*>(&other->_impl_.dailystatisticsinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[30]);
}

// ===================================================================

class GetDailyStatisticsResponse::_Internal {
 public:
};

void GetDailyStatisticsResponse::clear_dailystatisticsinfo() {
  _impl_.dailystatisticsinfo_.Clear();
}
GetDailyStatisticsResponse::GetDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetDailyStatisticsResponse)
}
GetDailyStatisticsResponse::GetDailyStatisticsResponse(const GetDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsinfo_){from._impl_.dailystatisticsinfo_}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.GetDailyStatisticsResponse)
}

inline void GetDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsinfo_){arena}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDailyStatisticsResponse::~GetDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dailystatisticsinfo_.~RepeatedPtrField();
  _impl_.message_.Destroy();
}

void GetDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dailystatisticsinfo_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetDailyStatisticsResponse.Message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dailystatisticsinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetDailyStatisticsResponse.Message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dailystatisticsinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_dailystatisticsinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetDailyStatisticsResponse)
  return target;
}

size_t GetDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  total_size += 1UL * this->_internal_dailystatisticsinfo_size();
  for (const auto& msg : this->_impl_.dailystatisticsinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void GetDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const GetDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dailystatisticsinfo_.MergeFrom(from._impl_.dailystatisticsinfo_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDailyStatisticsResponse::CopyFrom(const GetDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void GetDailyStatisticsResponse::InternalSwap(GetDailyStatisticsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dailystatisticsinfo_.InternalSwap(&other->_impl_.dailystatisticsinfo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[31]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::CreateUserResponse*
Arena::CreateMaybeMessage< ::proto::CreateUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteUserResponse*
Arena::CreateMaybeMessage< ::proto::DeleteUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateUserResponse*
Arena::CreateMaybeMessage< ::proto::UpdateUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserResponse*
Arena::CreateMaybeMessage< ::proto::GetUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLoginResponse*
Arena::CreateMaybeMessage< ::proto::UserLoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLogoutResponse*
Arena::CreateMaybeMessage< ::proto::UserLogoutResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLogoutResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUsersResponse*
Arena::CreateMaybeMessage< ::proto::GetUsersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUsersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::GetUserPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::GetPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetPermissionGroupsResponse*
Arena::CreateMaybeMessage< ::proto::GetPermissionGroupsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetPermissionGroupsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ChangeUserPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::ChangeUserPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ChangeUserPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateProjectResponse*
Arena::CreateMaybeMessage< ::proto::CreateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteProjectResponse*
Arena::CreateMaybeMessage< ::proto::DeleteProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateProjectResponse*
Arena::CreateMaybeMessage< ::proto::UpdateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetProjectResponse*
Arena::CreateMaybeMessage< ::proto::GetProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetProjectsResponse*
Arena::CreateMaybeMessage< ::proto::GetProjectsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetProjectsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcsMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcsMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcsMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcsNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcsNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcsNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcsNodeDataByTimeAndUserResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcsNodeDataByTimeAndUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcsNodeDataByTimeAndUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::BackupFullDatabaseReponse*
Arena::CreateMaybeMessage< ::proto::BackupFullDatabaseReponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::BackupFullDatabaseReponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::CreateDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::DeleteDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::UpdateDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::GetDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetDailyStatisticsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
