// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/Message.proto

#include "Message/Message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR MetaInfoBase::MetaInfoBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apiversion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetaInfoBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaInfoBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaInfoBaseDefaultTypeInternal() {}
  union {
    MetaInfoBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaInfoBaseDefaultTypeInternal _MetaInfoBase_default_instance_;
PROTOBUF_CONSTEXPR UserMetaInfoV1::UserMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.headphotobindata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userpermissiongroup_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserMetaInfoV1DefaultTypeInternal() {}
  union {
    UserMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserMetaInfoV1DefaultTypeInternal _UserMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.writepermissioncreateproject_)*/false
  , /*decltype(_impl_.writepermissionmodifyproject_)*/false
  , /*decltype(_impl_.writepermissiondeleteproject_)*/false
  , /*decltype(_impl_.readperimissionquery_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GlobalPermissionMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR GlobalPermissionMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GlobalPermissionMetaInfoV1DefaultTypeInternal() {}
  union {
    GlobalPermissionMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GlobalPermissionMetaInfoV1DefaultTypeInternal _GlobalPermissionMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.writepermission_adddata_)*/false
  , /*decltype(_impl_.writepermission_modifydata_)*/false
  , /*decltype(_impl_.writepermission_deletedata_)*/false
  , /*decltype(_impl_.readperimission_query_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProjectPermissionMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectPermissionMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectPermissionMetaInfoV1DefaultTypeInternal() {}
  union {
    ProjectPermissionMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectPermissionMetaInfoV1DefaultTypeInternal _ProjectPermissionMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.globalpermission_)*/nullptr
  , /*decltype(_impl_.projectpermission_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PermissionGroupMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionGroupMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionGroupMetaInfoV1DefaultTypeInternal() {}
  union {
    PermissionGroupMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionGroupMetaInfoV1DefaultTypeInternal _PermissionGroupMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.globalpermission_)*/nullptr
  , /*decltype(_impl_.projectpermission_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserPermissionOverrideMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserPermissionOverrideMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserPermissionOverrideMetaInfoV1DefaultTypeInternal() {}
  union {
    UserPermissionOverrideMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserPermissionOverrideMetaInfoV1DefaultTypeInternal _UserPermissionOverrideMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR ProjectMetaInfoV1::ProjectMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swclist_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.workmode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_.permissionoverride_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProjectMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectMetaInfoV1DefaultTypeInternal() {}
  union {
    ProjectMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectMetaInfoV1DefaultTypeInternal _ProjectMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcMetaInfoV1::SwcMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcMetaInfoV1DefaultTypeInternal _SwcMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcNodeDataV1::SwcNodeDataV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcdata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.annotatoruseruuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.checkeruseruuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcNodeDataV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcNodeDataV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcNodeDataV1DefaultTypeInternal() {}
  union {
    SwcNodeDataV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcNodeDataV1DefaultTypeInternal _SwcNodeDataV1_default_instance_;
PROTOBUF_CONSTEXPR SwcDataV1::SwcDataV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcdata_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcDataV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcDataV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcDataV1DefaultTypeInternal() {}
  union {
    SwcDataV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcDataV1DefaultTypeInternal _SwcDataV1_default_instance_;
PROTOBUF_CONSTEXPR DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.day_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createdprojectnumber_)*/0
  , /*decltype(_impl_.createdswcnumber_)*/0
  , /*decltype(_impl_.createswcnodenumber_)*/0
  , /*decltype(_impl_.deletedprojectnumber_)*/0
  , /*decltype(_impl_.deletedswcnumber_)*/0
  , /*decltype(_impl_.deletedswcnodenumber_)*/0
  , /*decltype(_impl_.modifiedprojectnumber_)*/0
  , /*decltype(_impl_.modifiedswcnumber_)*/0
  , /*decltype(_impl_.modifiedswcnodenumber_)*/0
  , /*decltype(_impl_.projectquerynumber_)*/0
  , /*decltype(_impl_.swcquerynumber_)*/0
  , /*decltype(_impl_.nodequerynumber_)*/0
  , /*decltype(_impl_.activeusernumber_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DailyStatisticsMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR DailyStatisticsMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DailyStatisticsMetaInfoV1DefaultTypeInternal() {}
  union {
    DailyStatisticsMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DailyStatisticsMetaInfoV1DefaultTypeInternal _DailyStatisticsMetaInfoV1_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_Message_2fMessage_2eproto[11];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message_2fMessage_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2fMessage_2eproto = nullptr;

const uint32_t TableStruct_Message_2fMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_._id_),
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_.apiversion_),
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_.uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.headphotobindata_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.userpermissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissioncreateproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissionmodifyproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissiondeleteproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.readperimissionquery_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermission_adddata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermission_modifydata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermission_deletedata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.readperimission_query_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.globalpermission_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.projectpermission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _impl_.globalpermission_),
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _impl_.projectpermission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.lastmodifiedtime_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.swclist_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.permissionoverride_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.workmode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.lastmodifiedtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.swcdata_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.lastmodifiedtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.annotatoruseruuid_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.checkeruseruuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcDataV1, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.day_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createdprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createdswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.projectquerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.swcquerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.nodequerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.activeusernumber_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::MetaInfoBase)},
  { 9, -1, -1, sizeof(::proto::UserMetaInfoV1)},
  { 22, -1, -1, sizeof(::proto::GlobalPermissionMetaInfoV1)},
  { 32, -1, -1, sizeof(::proto::ProjectPermissionMetaInfoV1)},
  { 42, -1, -1, sizeof(::proto::PermissionGroupMetaInfoV1)},
  { 53, -1, -1, sizeof(::proto::UserPermissionOverrideMetaInfoV1)},
  { 61, -1, -1, sizeof(::proto::ProjectMetaInfoV1)},
  { 76, -1, -1, sizeof(::proto::SwcMetaInfoV1)},
  { 88, -1, -1, sizeof(::proto::SwcNodeDataV1)},
  { 101, -1, -1, sizeof(::proto::SwcDataV1)},
  { 108, -1, -1, sizeof(::proto::DailyStatisticsMetaInfoV1)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_MetaInfoBase_default_instance_._instance,
  &::proto::_UserMetaInfoV1_default_instance_._instance,
  &::proto::_GlobalPermissionMetaInfoV1_default_instance_._instance,
  &::proto::_ProjectPermissionMetaInfoV1_default_instance_._instance,
  &::proto::_PermissionGroupMetaInfoV1_default_instance_._instance,
  &::proto::_UserPermissionOverrideMetaInfoV1_default_instance_._instance,
  &::proto::_ProjectMetaInfoV1_default_instance_._instance,
  &::proto::_SwcMetaInfoV1_default_instance_._instance,
  &::proto::_SwcNodeDataV1_default_instance_._instance,
  &::proto::_SwcDataV1_default_instance_._instance,
  &::proto::_DailyStatisticsMetaInfoV1_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2fMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025Message/Message.proto\022\005proto\032\037google/p"
  "rotobuf/timestamp.proto\"=\n\014MetaInfoBase\022"
  "\013\n\003_id\030\001 \001(\t\022\022\n\nApiVersion\030\002 \001(\t\022\014\n\004Uuid"
  "\030\003 \001(\t\"\317\001\n\016UserMetaInfoV1\022!\n\004Base\030\001 \001(\0132"
  "\023.proto.MetaInfoBase\022\014\n\004Name\030\002 \001(\t\022\020\n\010Pa"
  "ssword\030\003 \001(\t\022\023\n\013Description\030\004 \001(\t\022.\n\nCre"
  "ateTime\030\005 \001(\0132\032.google.protobuf.Timestam"
  "p\022\030\n\020HeadPhotoBinData\030\006 \001(\014\022\033\n\023UserPermi"
  "ssionGroup\030\007 \001(\t\"\254\001\n\032GlobalPermissionMet"
  "aInfoV1\022$\n\034WritePermissionCreateProject\030"
  "\001 \001(\010\022$\n\034WritePermissionModifyProject\030\002 "
  "\001(\010\022$\n\034WritePermissionDeleteProject\030\003 \001("
  "\010\022\034\n\024ReadPerimissionQuery\030\004 \001(\010\"\245\001\n\033Proj"
  "ectPermissionMetaInfoV1\022\037\n\027WritePermissi"
  "on_AddData\030\001 \001(\010\022\"\n\032WritePermission_Modi"
  "fyData\030\002 \001(\010\022\"\n\032WritePermission_DeleteDa"
  "ta\030\003 \001(\010\022\035\n\025ReadPerimission_Query\030\004 \001(\010\""
  "\335\001\n\031PermissionGroupMetaInfoV1\022!\n\004Base\030\001 "
  "\001(\0132\023.proto.MetaInfoBase\022\014\n\004Name\030\002 \001(\t\022\023"
  "\n\013Description\030\003 \001(\t\022;\n\020GlobalPermission\030"
  "\004 \001(\0132!.proto.GlobalPermissionMetaInfoV1"
  "\022=\n\021ProjectPermission\030\005 \001(\0132\".proto.Proj"
  "ectPermissionMetaInfoV1\"\236\001\n UserPermissi"
  "onOverrideMetaInfoV1\022;\n\020GlobalPermission"
  "\030\001 \001(\0132!.proto.GlobalPermissionMetaInfoV"
  "1\022=\n\021ProjectPermission\030\002 \001(\0132\".proto.Pro"
  "jectPermissionMetaInfoV1\"\270\002\n\021ProjectMeta"
  "InfoV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBas"
  "e\022\014\n\004Name\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022\017\n\007"
  "Creator\030\004 \001(\t\022.\n\nCreateTime\030\005 \001(\0132\032.goog"
  "le.protobuf.Timestamp\0224\n\020LastModifiedTim"
  "e\030\006 \001(\0132\032.google.protobuf.Timestamp\022\017\n\007S"
  "wcList\030\007 \003(\t\022C\n\022PermissionOverride\030\010 \001(\013"
  "2\'.proto.UserPermissionOverrideMetaInfoV"
  "1\022\020\n\010WorkMode\030\t \001(\t\"\314\001\n\rSwcMetaInfoV1\022!\n"
  "\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\022\014\n\004Name"
  "\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022\017\n\007Creator\030\004"
  " \001(\t\022.\n\nCreateTime\030\005 \001(\0132\032.google.protob"
  "uf.Timestamp\0224\n\020LastModifiedTime\030\006 \001(\0132\032"
  ".google.protobuf.Timestamp\"\356\001\n\rSwcNodeDa"
  "taV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\022"
  "\017\n\007SwcData\030\002 \001(\t\022\017\n\007Creator\030\003 \001(\t\022.\n\nCre"
  "ateTime\030\004 \001(\0132\032.google.protobuf.Timestam"
  "p\0224\n\020LastModifiedTime\030\005 \001(\0132\032.google.pro"
  "tobuf.Timestamp\022\031\n\021AnnotatorUserUuid\030\006 \001"
  "(\t\022\027\n\017CheckerUserUuid\030\007 \001(\t\"2\n\tSwcDataV1"
  "\022%\n\007SwcData\030\001 \003(\0132\024.proto.SwcNodeDataV1\""
  "\331\003\n\031DailyStatisticsMetaInfoV1\022!\n\004Base\030\001 "
  "\001(\0132\023.proto.MetaInfoBase\022\014\n\004Name\030\002 \001(\t\022\023"
  "\n\013Description\030\003 \001(\t\022\013\n\003Day\030\004 \001(\t\022\034\n\024Crea"
  "tedProjectNumber\030\005 \001(\005\022\030\n\020CreatedSwcNumb"
  "er\030\006 \001(\005\022\033\n\023CreateSwcNodeNumber\030\007 \001(\005\022\034\n"
  "\024DeletedProjectNumber\030\010 \001(\005\022\030\n\020DeletedSw"
  "cNumber\030\t \001(\005\022\034\n\024DeletedSwcNodeNumber\030\n "
  "\001(\005\022\035\n\025ModifiedProjectNumber\030\013 \001(\005\022\031\n\021Mo"
  "difiedSwcNumber\030\014 \001(\005\022\035\n\025ModifiedSwcNode"
  "Number\030\r \001(\005\022\032\n\022ProjectQueryNumber\030\016 \001(\005"
  "\022\026\n\016SwcQueryNumber\030\017 \001(\005\022\027\n\017NodeQueryNum"
  "ber\030\020 \001(\005\022\030\n\020ActiveUserNumber\030\021 \001(\005B\036Z\034D"
  "BMS/Generated/proto/messageP\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2fMessage_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2fMessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2fMessage_2eproto = {
    false, false, 2397, descriptor_table_protodef_Message_2fMessage_2eproto,
    "Message/Message.proto",
    &descriptor_table_Message_2fMessage_2eproto_once, descriptor_table_Message_2fMessage_2eproto_deps, 1, 11,
    schemas, file_default_instances, TableStruct_Message_2fMessage_2eproto::offsets,
    file_level_metadata_Message_2fMessage_2eproto, file_level_enum_descriptors_Message_2fMessage_2eproto,
    file_level_service_descriptors_Message_2fMessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2fMessage_2eproto_getter() {
  return &descriptor_table_Message_2fMessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2fMessage_2eproto(&descriptor_table_Message_2fMessage_2eproto);
namespace proto {

// ===================================================================

class MetaInfoBase::_Internal {
 public:
};

MetaInfoBase::MetaInfoBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.MetaInfoBase)
}
MetaInfoBase::MetaInfoBase(const MetaInfoBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetaInfoBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._id_){}
    , decltype(_impl_.apiversion_){}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_._id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_._id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal__id().empty()) {
    _this->_impl_._id_.Set(from._internal__id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apiversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apiversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apiversion().empty()) {
    _this->_impl_.apiversion_.Set(from._internal_apiversion(), 
      _this->GetArenaForAllocation());
  }
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.MetaInfoBase)
}

inline void MetaInfoBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._id_){}
    , decltype(_impl_.apiversion_){}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_._id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_._id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apiversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apiversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MetaInfoBase::~MetaInfoBase() {
  // @@protoc_insertion_point(destructor:proto.MetaInfoBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MetaInfoBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._id_.Destroy();
  _impl_.apiversion_.Destroy();
  _impl_.uuid_.Destroy();
}

void MetaInfoBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetaInfoBase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MetaInfoBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._id_.ClearToEmpty();
  _impl_.apiversion_.ClearToEmpty();
  _impl_.uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetaInfoBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string _id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable__id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase._id"));
        } else
          goto handle_unusual;
        continue;
      // string ApiVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_apiversion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase.ApiVersion"));
        } else
          goto handle_unusual;
        continue;
      // string Uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase.Uuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetaInfoBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.MetaInfoBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string _id = 1;
  if (!this->_internal__id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal__id().data(), static_cast<int>(this->_internal__id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase._id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal__id(), target);
  }

  // string ApiVersion = 2;
  if (!this->_internal_apiversion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apiversion().data(), static_cast<int>(this->_internal_apiversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase.ApiVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apiversion(), target);
  }

  // string Uuid = 3;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase.Uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MetaInfoBase)
  return target;
}

size_t MetaInfoBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MetaInfoBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string _id = 1;
  if (!this->_internal__id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal__id());
  }

  // string ApiVersion = 2;
  if (!this->_internal_apiversion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apiversion());
  }

  // string Uuid = 3;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetaInfoBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetaInfoBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetaInfoBase::GetClassData() const { return &_class_data_; }


void MetaInfoBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetaInfoBase*>(&to_msg);
  auto& from = static_cast<const MetaInfoBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.MetaInfoBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal__id().empty()) {
    _this->_internal_set__id(from._internal__id());
  }
  if (!from._internal_apiversion().empty()) {
    _this->_internal_set_apiversion(from._internal_apiversion());
  }
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetaInfoBase::CopyFrom(const MetaInfoBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MetaInfoBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaInfoBase::IsInitialized() const {
  return true;
}

void MetaInfoBase::InternalSwap(MetaInfoBase* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_._id_, lhs_arena,
      &other->_impl_._id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apiversion_, lhs_arena,
      &other->_impl_.apiversion_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MetaInfoBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[0]);
}

// ===================================================================

class UserMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const UserMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const UserMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
UserMetaInfoV1::_Internal::base(const UserMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
UserMetaInfoV1::_Internal::createtime(const UserMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
void UserMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
UserMetaInfoV1::UserMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserMetaInfoV1)
}
UserMetaInfoV1::UserMetaInfoV1(const UserMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.headphotobindata_){}
    , decltype(_impl_.userpermissiongroup_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.headphotobindata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headphotobindata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_headphotobindata().empty()) {
    _this->_impl_.headphotobindata_.Set(from._internal_headphotobindata(), 
      _this->GetArenaForAllocation());
  }
  _impl_.userpermissiongroup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpermissiongroup_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userpermissiongroup().empty()) {
    _this->_impl_.userpermissiongroup_.Set(from._internal_userpermissiongroup(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserMetaInfoV1)
}

inline void UserMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.headphotobindata_){}
    , decltype(_impl_.userpermissiongroup_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.headphotobindata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headphotobindata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.userpermissiongroup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpermissiongroup_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserMetaInfoV1::~UserMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.UserMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.password_.Destroy();
  _impl_.description_.Destroy();
  _impl_.headphotobindata_.Destroy();
  _impl_.userpermissiongroup_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
}

void UserMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.headphotobindata_.ClearToEmpty();
  _impl_.userpermissiongroup_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Password"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes HeadPhotoBinData = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_headphotobindata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserPermissionGroup = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_userpermissiongroup();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.UserPermissionGroup"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // string Description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // bytes HeadPhotoBinData = 6;
  if (!this->_internal_headphotobindata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_headphotobindata(), target);
  }

  // string UserPermissionGroup = 7;
  if (!this->_internal_userpermissiongroup().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userpermissiongroup().data(), static_cast<int>(this->_internal_userpermissiongroup().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.UserPermissionGroup");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_userpermissiongroup(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserMetaInfoV1)
  return target;
}

size_t UserMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string Description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // bytes HeadPhotoBinData = 6;
  if (!this->_internal_headphotobindata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_headphotobindata());
  }

  // string UserPermissionGroup = 7;
  if (!this->_internal_userpermissiongroup().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userpermissiongroup());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserMetaInfoV1::GetClassData() const { return &_class_data_; }


void UserMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const UserMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_headphotobindata().empty()) {
    _this->_internal_set_headphotobindata(from._internal_headphotobindata());
  }
  if (!from._internal_userpermissiongroup().empty()) {
    _this->_internal_set_userpermissiongroup(from._internal_userpermissiongroup());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserMetaInfoV1::CopyFrom(const UserMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMetaInfoV1::IsInitialized() const {
  return true;
}

void UserMetaInfoV1::InternalSwap(UserMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.headphotobindata_, lhs_arena,
      &other->_impl_.headphotobindata_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.userpermissiongroup_, lhs_arena,
      &other->_impl_.userpermissiongroup_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserMetaInfoV1, _impl_.createtime_)
      + sizeof(UserMetaInfoV1::_impl_.createtime_)
      - PROTOBUF_FIELD_OFFSET(UserMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[1]);
}

// ===================================================================

class GlobalPermissionMetaInfoV1::_Internal {
 public:
};

GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GlobalPermissionMetaInfoV1)
}
GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(const GlobalPermissionMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GlobalPermissionMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissioncreateproject_){}
    , decltype(_impl_.writepermissionmodifyproject_){}
    , decltype(_impl_.writepermissiondeleteproject_){}
    , decltype(_impl_.readperimissionquery_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.writepermissioncreateproject_, &from._impl_.writepermissioncreateproject_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
    reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_)) + sizeof(_impl_.readperimissionquery_));
  // @@protoc_insertion_point(copy_constructor:proto.GlobalPermissionMetaInfoV1)
}

inline void GlobalPermissionMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissioncreateproject_){false}
    , decltype(_impl_.writepermissionmodifyproject_){false}
    , decltype(_impl_.writepermissiondeleteproject_){false}
    , decltype(_impl_.readperimissionquery_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GlobalPermissionMetaInfoV1::~GlobalPermissionMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.GlobalPermissionMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GlobalPermissionMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GlobalPermissionMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GlobalPermissionMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GlobalPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.writepermissioncreateproject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
      reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_)) + sizeof(_impl_.readperimissionquery_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalPermissionMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool WritePermissionCreateProject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.writepermissioncreateproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionModifyProject = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.writepermissionmodifyproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionDeleteProject = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.writepermissiondeleteproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ReadPerimissionQuery = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.readperimissionquery_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GlobalPermissionMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GlobalPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool WritePermissionCreateProject = 1;
  if (this->_internal_writepermissioncreateproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_writepermissioncreateproject(), target);
  }

  // bool WritePermissionModifyProject = 2;
  if (this->_internal_writepermissionmodifyproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_writepermissionmodifyproject(), target);
  }

  // bool WritePermissionDeleteProject = 3;
  if (this->_internal_writepermissiondeleteproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_writepermissiondeleteproject(), target);
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_readperimissionquery(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GlobalPermissionMetaInfoV1)
  return target;
}

size_t GlobalPermissionMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GlobalPermissionMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool WritePermissionCreateProject = 1;
  if (this->_internal_writepermissioncreateproject() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionModifyProject = 2;
  if (this->_internal_writepermissionmodifyproject() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionDeleteProject = 3;
  if (this->_internal_writepermissiondeleteproject() != 0) {
    total_size += 1 + 1;
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GlobalPermissionMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GlobalPermissionMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GlobalPermissionMetaInfoV1::GetClassData() const { return &_class_data_; }


void GlobalPermissionMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GlobalPermissionMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const GlobalPermissionMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GlobalPermissionMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_writepermissioncreateproject() != 0) {
    _this->_internal_set_writepermissioncreateproject(from._internal_writepermissioncreateproject());
  }
  if (from._internal_writepermissionmodifyproject() != 0) {
    _this->_internal_set_writepermissionmodifyproject(from._internal_writepermissionmodifyproject());
  }
  if (from._internal_writepermissiondeleteproject() != 0) {
    _this->_internal_set_writepermissiondeleteproject(from._internal_writepermissiondeleteproject());
  }
  if (from._internal_readperimissionquery() != 0) {
    _this->_internal_set_readperimissionquery(from._internal_readperimissionquery());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GlobalPermissionMetaInfoV1::CopyFrom(const GlobalPermissionMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GlobalPermissionMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalPermissionMetaInfoV1::IsInitialized() const {
  return true;
}

void GlobalPermissionMetaInfoV1::InternalSwap(GlobalPermissionMetaInfoV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalPermissionMetaInfoV1, _impl_.readperimissionquery_)
      + sizeof(GlobalPermissionMetaInfoV1::_impl_.readperimissionquery_)
      - PROTOBUF_FIELD_OFFSET(GlobalPermissionMetaInfoV1, _impl_.writepermissioncreateproject_)>(
          reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_),
          reinterpret_cast<char*>(&other->_impl_.writepermissioncreateproject_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalPermissionMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[2]);
}

// ===================================================================

class ProjectPermissionMetaInfoV1::_Internal {
 public:
};

ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ProjectPermissionMetaInfoV1)
}
ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(const ProjectPermissionMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProjectPermissionMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermission_adddata_){}
    , decltype(_impl_.writepermission_modifydata_){}
    , decltype(_impl_.writepermission_deletedata_){}
    , decltype(_impl_.readperimission_query_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.writepermission_adddata_, &from._impl_.writepermission_adddata_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.readperimission_query_) -
    reinterpret_cast<char*>(&_impl_.writepermission_adddata_)) + sizeof(_impl_.readperimission_query_));
  // @@protoc_insertion_point(copy_constructor:proto.ProjectPermissionMetaInfoV1)
}

inline void ProjectPermissionMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermission_adddata_){false}
    , decltype(_impl_.writepermission_modifydata_){false}
    , decltype(_impl_.writepermission_deletedata_){false}
    , decltype(_impl_.readperimission_query_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProjectPermissionMetaInfoV1::~ProjectPermissionMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.ProjectPermissionMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProjectPermissionMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProjectPermissionMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProjectPermissionMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.writepermission_adddata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.readperimission_query_) -
      reinterpret_cast<char*>(&_impl_.writepermission_adddata_)) + sizeof(_impl_.readperimission_query_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectPermissionMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool WritePermission_AddData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.writepermission_adddata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermission_ModifyData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.writepermission_modifydata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermission_DeleteData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.writepermission_deletedata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ReadPerimission_Query = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.readperimission_query_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProjectPermissionMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool WritePermission_AddData = 1;
  if (this->_internal_writepermission_adddata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_writepermission_adddata(), target);
  }

  // bool WritePermission_ModifyData = 2;
  if (this->_internal_writepermission_modifydata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_writepermission_modifydata(), target);
  }

  // bool WritePermission_DeleteData = 3;
  if (this->_internal_writepermission_deletedata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_writepermission_deletedata(), target);
  }

  // bool ReadPerimission_Query = 4;
  if (this->_internal_readperimission_query() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_readperimission_query(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectPermissionMetaInfoV1)
  return target;
}

size_t ProjectPermissionMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectPermissionMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool WritePermission_AddData = 1;
  if (this->_internal_writepermission_adddata() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermission_ModifyData = 2;
  if (this->_internal_writepermission_modifydata() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermission_DeleteData = 3;
  if (this->_internal_writepermission_deletedata() != 0) {
    total_size += 1 + 1;
  }

  // bool ReadPerimission_Query = 4;
  if (this->_internal_readperimission_query() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProjectPermissionMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProjectPermissionMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProjectPermissionMetaInfoV1::GetClassData() const { return &_class_data_; }


void ProjectPermissionMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProjectPermissionMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const ProjectPermissionMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectPermissionMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_writepermission_adddata() != 0) {
    _this->_internal_set_writepermission_adddata(from._internal_writepermission_adddata());
  }
  if (from._internal_writepermission_modifydata() != 0) {
    _this->_internal_set_writepermission_modifydata(from._internal_writepermission_modifydata());
  }
  if (from._internal_writepermission_deletedata() != 0) {
    _this->_internal_set_writepermission_deletedata(from._internal_writepermission_deletedata());
  }
  if (from._internal_readperimission_query() != 0) {
    _this->_internal_set_readperimission_query(from._internal_readperimission_query());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectPermissionMetaInfoV1::CopyFrom(const ProjectPermissionMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectPermissionMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectPermissionMetaInfoV1::IsInitialized() const {
  return true;
}

void ProjectPermissionMetaInfoV1::InternalSwap(ProjectPermissionMetaInfoV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectPermissionMetaInfoV1, _impl_.readperimission_query_)
      + sizeof(ProjectPermissionMetaInfoV1::_impl_.readperimission_query_)
      - PROTOBUF_FIELD_OFFSET(ProjectPermissionMetaInfoV1, _impl_.writepermission_adddata_)>(
          reinterpret_cast<char*>(&_impl_.writepermission_adddata_),
          reinterpret_cast<char*>(&other->_impl_.writepermission_adddata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectPermissionMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[3]);
}

// ===================================================================

class PermissionGroupMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const PermissionGroupMetaInfoV1* msg);
  static const ::proto::GlobalPermissionMetaInfoV1& globalpermission(const PermissionGroupMetaInfoV1* msg);
  static const ::proto::ProjectPermissionMetaInfoV1& projectpermission(const PermissionGroupMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
PermissionGroupMetaInfoV1::_Internal::base(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::proto::GlobalPermissionMetaInfoV1&
PermissionGroupMetaInfoV1::_Internal::globalpermission(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.globalpermission_;
}
const ::proto::ProjectPermissionMetaInfoV1&
PermissionGroupMetaInfoV1::_Internal::projectpermission(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.projectpermission_;
}
PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.PermissionGroupMetaInfoV1)
}
PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(const PermissionGroupMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionGroupMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_globalpermission()) {
    _this->_impl_.globalpermission_ = new ::proto::GlobalPermissionMetaInfoV1(*from._impl_.globalpermission_);
  }
  if (from._internal_has_projectpermission()) {
    _this->_impl_.projectpermission_ = new ::proto::ProjectPermissionMetaInfoV1(*from._impl_.projectpermission_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PermissionGroupMetaInfoV1)
}

inline void PermissionGroupMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PermissionGroupMetaInfoV1::~PermissionGroupMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.PermissionGroupMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionGroupMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.globalpermission_;
  if (this != internal_default_instance()) delete _impl_.projectpermission_;
}

void PermissionGroupMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionGroupMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PermissionGroupMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.globalpermission_ != nullptr) {
    delete _impl_.globalpermission_;
  }
  _impl_.globalpermission_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectpermission_ != nullptr) {
    delete _impl_.projectpermission_;
  }
  _impl_.projectpermission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionGroupMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.PermissionGroupMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.PermissionGroupMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_globalpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionGroupMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.PermissionGroupMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.PermissionGroupMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.PermissionGroupMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
  if (this->_internal_has_globalpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::globalpermission(this),
        _Internal::globalpermission(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
  if (this->_internal_has_projectpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::projectpermission(this),
        _Internal::projectpermission(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PermissionGroupMetaInfoV1)
  return target;
}

size_t PermissionGroupMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PermissionGroupMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
  if (this->_internal_has_globalpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.globalpermission_);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
  if (this->_internal_has_projectpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectpermission_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionGroupMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionGroupMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionGroupMetaInfoV1::GetClassData() const { return &_class_data_; }


void PermissionGroupMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionGroupMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const PermissionGroupMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.PermissionGroupMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_globalpermission()) {
    _this->_internal_mutable_globalpermission()->::proto::GlobalPermissionMetaInfoV1::MergeFrom(
        from._internal_globalpermission());
  }
  if (from._internal_has_projectpermission()) {
    _this->_internal_mutable_projectpermission()->::proto::ProjectPermissionMetaInfoV1::MergeFrom(
        from._internal_projectpermission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionGroupMetaInfoV1::CopyFrom(const PermissionGroupMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PermissionGroupMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionGroupMetaInfoV1::IsInitialized() const {
  return true;
}

void PermissionGroupMetaInfoV1::InternalSwap(PermissionGroupMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PermissionGroupMetaInfoV1, _impl_.projectpermission_)
      + sizeof(PermissionGroupMetaInfoV1::_impl_.projectpermission_)
      - PROTOBUF_FIELD_OFFSET(PermissionGroupMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionGroupMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[4]);
}

// ===================================================================

class UserPermissionOverrideMetaInfoV1::_Internal {
 public:
  static const ::proto::GlobalPermissionMetaInfoV1& globalpermission(const UserPermissionOverrideMetaInfoV1* msg);
  static const ::proto::ProjectPermissionMetaInfoV1& projectpermission(const UserPermissionOverrideMetaInfoV1* msg);
};

const ::proto::GlobalPermissionMetaInfoV1&
UserPermissionOverrideMetaInfoV1::_Internal::globalpermission(const UserPermissionOverrideMetaInfoV1* msg) {
  return *msg->_impl_.globalpermission_;
}
const ::proto::ProjectPermissionMetaInfoV1&
UserPermissionOverrideMetaInfoV1::_Internal::projectpermission(const UserPermissionOverrideMetaInfoV1* msg) {
  return *msg->_impl_.projectpermission_;
}
UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserPermissionOverrideMetaInfoV1)
}
UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(const UserPermissionOverrideMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserPermissionOverrideMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_globalpermission()) {
    _this->_impl_.globalpermission_ = new ::proto::GlobalPermissionMetaInfoV1(*from._impl_.globalpermission_);
  }
  if (from._internal_has_projectpermission()) {
    _this->_impl_.projectpermission_ = new ::proto::ProjectPermissionMetaInfoV1(*from._impl_.projectpermission_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserPermissionOverrideMetaInfoV1)
}

inline void UserPermissionOverrideMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserPermissionOverrideMetaInfoV1::~UserPermissionOverrideMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.UserPermissionOverrideMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserPermissionOverrideMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.globalpermission_;
  if (this != internal_default_instance()) delete _impl_.projectpermission_;
}

void UserPermissionOverrideMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserPermissionOverrideMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserPermissionOverrideMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.globalpermission_ != nullptr) {
    delete _impl_.globalpermission_;
  }
  _impl_.globalpermission_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectpermission_ != nullptr) {
    delete _impl_.projectpermission_;
  }
  _impl_.projectpermission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserPermissionOverrideMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_globalpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserPermissionOverrideMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserPermissionOverrideMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 1;
  if (this->_internal_has_globalpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::globalpermission(this),
        _Internal::globalpermission(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 2;
  if (this->_internal_has_projectpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::projectpermission(this),
        _Internal::projectpermission(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserPermissionOverrideMetaInfoV1)
  return target;
}

size_t UserPermissionOverrideMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserPermissionOverrideMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 1;
  if (this->_internal_has_globalpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.globalpermission_);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 2;
  if (this->_internal_has_projectpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectpermission_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserPermissionOverrideMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserPermissionOverrideMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserPermissionOverrideMetaInfoV1::GetClassData() const { return &_class_data_; }


void UserPermissionOverrideMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserPermissionOverrideMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const UserPermissionOverrideMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserPermissionOverrideMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_globalpermission()) {
    _this->_internal_mutable_globalpermission()->::proto::GlobalPermissionMetaInfoV1::MergeFrom(
        from._internal_globalpermission());
  }
  if (from._internal_has_projectpermission()) {
    _this->_internal_mutable_projectpermission()->::proto::ProjectPermissionMetaInfoV1::MergeFrom(
        from._internal_projectpermission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserPermissionOverrideMetaInfoV1::CopyFrom(const UserPermissionOverrideMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserPermissionOverrideMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserPermissionOverrideMetaInfoV1::IsInitialized() const {
  return true;
}

void UserPermissionOverrideMetaInfoV1::InternalSwap(UserPermissionOverrideMetaInfoV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserPermissionOverrideMetaInfoV1, _impl_.projectpermission_)
      + sizeof(UserPermissionOverrideMetaInfoV1::_impl_.projectpermission_)
      - PROTOBUF_FIELD_OFFSET(UserPermissionOverrideMetaInfoV1, _impl_.globalpermission_)>(
          reinterpret_cast<char*>(&_impl_.globalpermission_),
          reinterpret_cast<char*>(&other->_impl_.globalpermission_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserPermissionOverrideMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[5]);
}

// ===================================================================

class ProjectMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const ProjectMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const ProjectMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const ProjectMetaInfoV1* msg);
  static const ::proto::UserPermissionOverrideMetaInfoV1& permissionoverride(const ProjectMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
ProjectMetaInfoV1::_Internal::base(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProjectMetaInfoV1::_Internal::createtime(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProjectMetaInfoV1::_Internal::lastmodifiedtime(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
const ::proto::UserPermissionOverrideMetaInfoV1&
ProjectMetaInfoV1::_Internal::permissionoverride(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.permissionoverride_;
}
void ProjectMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void ProjectMetaInfoV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
ProjectMetaInfoV1::ProjectMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ProjectMetaInfoV1)
}
ProjectMetaInfoV1::ProjectMetaInfoV1(const ProjectMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProjectMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swclist_){from._impl_.swclist_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.workmode_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , decltype(_impl_.permissionoverride_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  _impl_.workmode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workmode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workmode().empty()) {
    _this->_impl_.workmode_.Set(from._internal_workmode(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  if (from._internal_has_permissionoverride()) {
    _this->_impl_.permissionoverride_ = new ::proto::UserPermissionOverrideMetaInfoV1(*from._impl_.permissionoverride_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ProjectMetaInfoV1)
}

inline void ProjectMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swclist_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.workmode_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , decltype(_impl_.permissionoverride_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.workmode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workmode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProjectMetaInfoV1::~ProjectMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.ProjectMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProjectMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swclist_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.workmode_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
  if (this != internal_default_instance()) delete _impl_.permissionoverride_;
}

void ProjectMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProjectMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swclist_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  _impl_.workmode_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.permissionoverride_ != nullptr) {
    delete _impl_.permissionoverride_;
  }
  _impl_.permissionoverride_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Creator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string SwcList = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_swclist();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.SwcList"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .proto.UserPermissionOverrideMetaInfoV1 PermissionOverride = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissionoverride(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string WorkMode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_workmode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.WorkMode"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProjectMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Creator");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_creator(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  // repeated string SwcList = 7;
  for (int i = 0, n = this->_internal_swclist_size(); i < n; i++) {
    const auto& s = this->_internal_swclist(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.SwcList");
    target = stream->WriteString(7, s, target);
  }

  // .proto.UserPermissionOverrideMetaInfoV1 PermissionOverride = 8;
  if (this->_internal_has_permissionoverride()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::permissionoverride(this),
        _Internal::permissionoverride(this).GetCachedSize(), target, stream);
  }

  // string WorkMode = 9;
  if (!this->_internal_workmode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workmode().data(), static_cast<int>(this->_internal_workmode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.WorkMode");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_workmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectMetaInfoV1)
  return target;
}

size_t ProjectMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string SwcList = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.swclist_.size());
  for (int i = 0, n = _impl_.swclist_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.swclist_.Get(i));
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string WorkMode = 9;
  if (!this->_internal_workmode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workmode());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  // .proto.UserPermissionOverrideMetaInfoV1 PermissionOverride = 8;
  if (this->_internal_has_permissionoverride()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissionoverride_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProjectMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProjectMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProjectMetaInfoV1::GetClassData() const { return &_class_data_; }


void ProjectMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProjectMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const ProjectMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swclist_.MergeFrom(from._impl_.swclist_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_workmode().empty()) {
    _this->_internal_set_workmode(from._internal_workmode());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  if (from._internal_has_permissionoverride()) {
    _this->_internal_mutable_permissionoverride()->::proto::UserPermissionOverrideMetaInfoV1::MergeFrom(
        from._internal_permissionoverride());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectMetaInfoV1::CopyFrom(const ProjectMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectMetaInfoV1::IsInitialized() const {
  return true;
}

void ProjectMetaInfoV1::InternalSwap(ProjectMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swclist_.InternalSwap(&other->_impl_.swclist_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.workmode_, lhs_arena,
      &other->_impl_.workmode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectMetaInfoV1, _impl_.permissionoverride_)
      + sizeof(ProjectMetaInfoV1::_impl_.permissionoverride_)
      - PROTOBUF_FIELD_OFFSET(ProjectMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[6]);
}

// ===================================================================

class SwcMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const SwcMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
SwcMetaInfoV1::_Internal::base(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcMetaInfoV1::_Internal::createtime(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcMetaInfoV1::_Internal::lastmodifiedtime(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
void SwcMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void SwcMetaInfoV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
SwcMetaInfoV1::SwcMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcMetaInfoV1)
}
SwcMetaInfoV1::SwcMetaInfoV1(const SwcMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcMetaInfoV1)
}

inline void SwcMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcMetaInfoV1::~SwcMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.creator_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
}

void SwcMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Creator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Creator");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_creator(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcMetaInfoV1)
  return target;
}

size_t SwcMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcMetaInfoV1::CopyFrom(const SwcMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcMetaInfoV1::InternalSwap(SwcMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcMetaInfoV1, _impl_.lastmodifiedtime_)
      + sizeof(SwcMetaInfoV1::_impl_.lastmodifiedtime_)
      - PROTOBUF_FIELD_OFFSET(SwcMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[7]);
}

// ===================================================================

class SwcNodeDataV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcNodeDataV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcNodeDataV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const SwcNodeDataV1* msg);
};

const ::proto::MetaInfoBase&
SwcNodeDataV1::_Internal::base(const SwcNodeDataV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcNodeDataV1::_Internal::createtime(const SwcNodeDataV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcNodeDataV1::_Internal::lastmodifiedtime(const SwcNodeDataV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
void SwcNodeDataV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void SwcNodeDataV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
SwcNodeDataV1::SwcNodeDataV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcNodeDataV1)
}
SwcNodeDataV1::SwcNodeDataV1(const SwcNodeDataV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcNodeDataV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.annotatoruseruuid_){}
    , decltype(_impl_.checkeruseruuid_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcdata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcdata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcdata().empty()) {
    _this->_impl_.swcdata_.Set(from._internal_swcdata(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  _impl_.annotatoruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotatoruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_annotatoruseruuid().empty()) {
    _this->_impl_.annotatoruseruuid_.Set(from._internal_annotatoruseruuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.checkeruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.checkeruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_checkeruseruuid().empty()) {
    _this->_impl_.checkeruseruuid_.Set(from._internal_checkeruseruuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcNodeDataV1)
}

inline void SwcNodeDataV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.annotatoruseruuid_){}
    , decltype(_impl_.checkeruseruuid_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcdata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcdata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.annotatoruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.annotatoruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.checkeruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.checkeruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcNodeDataV1::~SwcNodeDataV1() {
  // @@protoc_insertion_point(destructor:proto.SwcNodeDataV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcNodeDataV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcdata_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.annotatoruseruuid_.Destroy();
  _impl_.checkeruseruuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
}

void SwcNodeDataV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcNodeDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcNodeDataV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcdata_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  _impl_.annotatoruseruuid_.ClearToEmpty();
  _impl_.checkeruseruuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcNodeDataV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_swcdata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.SwcData"));
        } else
          goto handle_unusual;
        continue;
      // string Creator = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string AnnotatorUserUuid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_annotatoruseruuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.AnnotatorUserUuid"));
        } else
          goto handle_unusual;
        continue;
      // string CheckerUserUuid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_checkeruseruuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.CheckerUserUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcNodeDataV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcNodeDataV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string SwcData = 2;
  if (!this->_internal_swcdata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcdata().data(), static_cast<int>(this->_internal_swcdata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.SwcData");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_swcdata(), target);
  }

  // string Creator = 3;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.Creator");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_creator(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 5;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  // string AnnotatorUserUuid = 6;
  if (!this->_internal_annotatoruseruuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_annotatoruseruuid().data(), static_cast<int>(this->_internal_annotatoruseruuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.AnnotatorUserUuid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_annotatoruseruuid(), target);
  }

  // string CheckerUserUuid = 7;
  if (!this->_internal_checkeruseruuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkeruseruuid().data(), static_cast<int>(this->_internal_checkeruseruuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.CheckerUserUuid");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_checkeruseruuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcNodeDataV1)
  return target;
}

size_t SwcNodeDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcNodeDataV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcData = 2;
  if (!this->_internal_swcdata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcdata());
  }

  // string Creator = 3;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string AnnotatorUserUuid = 6;
  if (!this->_internal_annotatoruseruuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_annotatoruseruuid());
  }

  // string CheckerUserUuid = 7;
  if (!this->_internal_checkeruseruuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkeruseruuid());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 5;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcNodeDataV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcNodeDataV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcNodeDataV1::GetClassData() const { return &_class_data_; }


void SwcNodeDataV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcNodeDataV1*>(&to_msg);
  auto& from = static_cast<const SwcNodeDataV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcNodeDataV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcdata().empty()) {
    _this->_internal_set_swcdata(from._internal_swcdata());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_annotatoruseruuid().empty()) {
    _this->_internal_set_annotatoruseruuid(from._internal_annotatoruseruuid());
  }
  if (!from._internal_checkeruseruuid().empty()) {
    _this->_internal_set_checkeruseruuid(from._internal_checkeruseruuid());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcNodeDataV1::CopyFrom(const SwcNodeDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcNodeDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcNodeDataV1::IsInitialized() const {
  return true;
}

void SwcNodeDataV1::InternalSwap(SwcNodeDataV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcdata_, lhs_arena,
      &other->_impl_.swcdata_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.annotatoruseruuid_, lhs_arena,
      &other->_impl_.annotatoruseruuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.checkeruseruuid_, lhs_arena,
      &other->_impl_.checkeruseruuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcNodeDataV1, _impl_.lastmodifiedtime_)
      + sizeof(SwcNodeDataV1::_impl_.lastmodifiedtime_)
      - PROTOBUF_FIELD_OFFSET(SwcNodeDataV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcNodeDataV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[8]);
}

// ===================================================================

class SwcDataV1::_Internal {
 public:
};

SwcDataV1::SwcDataV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcDataV1)
}
SwcDataV1::SwcDataV1(const SwcDataV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcDataV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){from._impl_.swcdata_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SwcDataV1)
}

inline void SwcDataV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SwcDataV1::~SwcDataV1() {
  // @@protoc_insertion_point(destructor:proto.SwcDataV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcDataV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcdata_.~RepeatedPtrField();
}

void SwcDataV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcDataV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcdata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcDataV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .proto.SwcNodeDataV1 SwcData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcDataV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcDataV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SwcNodeDataV1 SwcData = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcdata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcDataV1)
  return target;
}

size_t SwcDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcDataV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcNodeDataV1 SwcData = 1;
  total_size += 1UL * this->_internal_swcdata_size();
  for (const auto& msg : this->_impl_.swcdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcDataV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcDataV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcDataV1::GetClassData() const { return &_class_data_; }


void SwcDataV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcDataV1*>(&to_msg);
  auto& from = static_cast<const SwcDataV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcDataV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcdata_.MergeFrom(from._impl_.swcdata_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcDataV1::CopyFrom(const SwcDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcDataV1::IsInitialized() const {
  return true;
}

void SwcDataV1::InternalSwap(SwcDataV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcdata_.InternalSwap(&other->_impl_.swcdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcDataV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[9]);
}

// ===================================================================

class DailyStatisticsMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const DailyStatisticsMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
DailyStatisticsMetaInfoV1::_Internal::base(const DailyStatisticsMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DailyStatisticsMetaInfoV1)
}
DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(const DailyStatisticsMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DailyStatisticsMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.day_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createdprojectnumber_){}
    , decltype(_impl_.createdswcnumber_){}
    , decltype(_impl_.createswcnodenumber_){}
    , decltype(_impl_.deletedprojectnumber_){}
    , decltype(_impl_.deletedswcnumber_){}
    , decltype(_impl_.deletedswcnodenumber_){}
    , decltype(_impl_.modifiedprojectnumber_){}
    , decltype(_impl_.modifiedswcnumber_){}
    , decltype(_impl_.modifiedswcnodenumber_){}
    , decltype(_impl_.projectquerynumber_){}
    , decltype(_impl_.swcquerynumber_){}
    , decltype(_impl_.nodequerynumber_){}
    , decltype(_impl_.activeusernumber_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.day_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_day().empty()) {
    _this->_impl_.day_.Set(from._internal_day(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  ::memcpy(&_impl_.createdprojectnumber_, &from._impl_.createdprojectnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.activeusernumber_) -
    reinterpret_cast<char*>(&_impl_.createdprojectnumber_)) + sizeof(_impl_.activeusernumber_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyStatisticsMetaInfoV1)
}

inline void DailyStatisticsMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.day_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createdprojectnumber_){0}
    , decltype(_impl_.createdswcnumber_){0}
    , decltype(_impl_.createswcnodenumber_){0}
    , decltype(_impl_.deletedprojectnumber_){0}
    , decltype(_impl_.deletedswcnumber_){0}
    , decltype(_impl_.deletedswcnodenumber_){0}
    , decltype(_impl_.modifiedprojectnumber_){0}
    , decltype(_impl_.modifiedswcnumber_){0}
    , decltype(_impl_.modifiedswcnodenumber_){0}
    , decltype(_impl_.projectquerynumber_){0}
    , decltype(_impl_.swcquerynumber_){0}
    , decltype(_impl_.nodequerynumber_){0}
    , decltype(_impl_.activeusernumber_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.day_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DailyStatisticsMetaInfoV1::~DailyStatisticsMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.DailyStatisticsMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DailyStatisticsMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.day_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void DailyStatisticsMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DailyStatisticsMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyStatisticsMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.day_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  ::memset(&_impl_.createdprojectnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.activeusernumber_) -
      reinterpret_cast<char*>(&_impl_.createdprojectnumber_)) + sizeof(_impl_.activeusernumber_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyStatisticsMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Day = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_day();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Day"));
        } else
          goto handle_unusual;
        continue;
      // int32 CreatedProjectNumber = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.createdprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CreatedSwcNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.createdswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CreateSwcNodeNumber = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.createswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedProjectNumber = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.deletedprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedSwcNumber = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.deletedswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedSwcNodeNumber = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.deletedswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedProjectNumber = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.modifiedprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedSwcNumber = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.modifiedswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedSwcNodeNumber = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.modifiedswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ProjectQueryNumber = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.projectquerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 SwcQueryNumber = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.swcquerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 NodeQueryNumber = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.nodequerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ActiveUserNumber = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.activeusernumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DailyStatisticsMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyStatisticsMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Day = 4;
  if (!this->_internal_day().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_day().data(), static_cast<int>(this->_internal_day().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Day");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_day(), target);
  }

  // int32 CreatedProjectNumber = 5;
  if (this->_internal_createdprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_createdprojectnumber(), target);
  }

  // int32 CreatedSwcNumber = 6;
  if (this->_internal_createdswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_createdswcnumber(), target);
  }

  // int32 CreateSwcNodeNumber = 7;
  if (this->_internal_createswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_createswcnodenumber(), target);
  }

  // int32 DeletedProjectNumber = 8;
  if (this->_internal_deletedprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_deletedprojectnumber(), target);
  }

  // int32 DeletedSwcNumber = 9;
  if (this->_internal_deletedswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_deletedswcnumber(), target);
  }

  // int32 DeletedSwcNodeNumber = 10;
  if (this->_internal_deletedswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_deletedswcnodenumber(), target);
  }

  // int32 ModifiedProjectNumber = 11;
  if (this->_internal_modifiedprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_modifiedprojectnumber(), target);
  }

  // int32 ModifiedSwcNumber = 12;
  if (this->_internal_modifiedswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_modifiedswcnumber(), target);
  }

  // int32 ModifiedSwcNodeNumber = 13;
  if (this->_internal_modifiedswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(13, this->_internal_modifiedswcnodenumber(), target);
  }

  // int32 ProjectQueryNumber = 14;
  if (this->_internal_projectquerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_projectquerynumber(), target);
  }

  // int32 SwcQueryNumber = 15;
  if (this->_internal_swcquerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(15, this->_internal_swcquerynumber(), target);
  }

  // int32 NodeQueryNumber = 16;
  if (this->_internal_nodequerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_nodequerynumber(), target);
  }

  // int32 ActiveUserNumber = 17;
  if (this->_internal_activeusernumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(17, this->_internal_activeusernumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyStatisticsMetaInfoV1)
  return target;
}

size_t DailyStatisticsMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyStatisticsMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Day = 4;
  if (!this->_internal_day().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_day());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // int32 CreatedProjectNumber = 5;
  if (this->_internal_createdprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createdprojectnumber());
  }

  // int32 CreatedSwcNumber = 6;
  if (this->_internal_createdswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createdswcnumber());
  }

  // int32 CreateSwcNodeNumber = 7;
  if (this->_internal_createswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createswcnodenumber());
  }

  // int32 DeletedProjectNumber = 8;
  if (this->_internal_deletedprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedprojectnumber());
  }

  // int32 DeletedSwcNumber = 9;
  if (this->_internal_deletedswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedswcnumber());
  }

  // int32 DeletedSwcNodeNumber = 10;
  if (this->_internal_deletedswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedswcnodenumber());
  }

  // int32 ModifiedProjectNumber = 11;
  if (this->_internal_modifiedprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedprojectnumber());
  }

  // int32 ModifiedSwcNumber = 12;
  if (this->_internal_modifiedswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedswcnumber());
  }

  // int32 ModifiedSwcNodeNumber = 13;
  if (this->_internal_modifiedswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedswcnodenumber());
  }

  // int32 ProjectQueryNumber = 14;
  if (this->_internal_projectquerynumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_projectquerynumber());
  }

  // int32 SwcQueryNumber = 15;
  if (this->_internal_swcquerynumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_swcquerynumber());
  }

  // int32 NodeQueryNumber = 16;
  if (this->_internal_nodequerynumber() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_nodequerynumber());
  }

  // int32 ActiveUserNumber = 17;
  if (this->_internal_activeusernumber() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_activeusernumber());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DailyStatisticsMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DailyStatisticsMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DailyStatisticsMetaInfoV1::GetClassData() const { return &_class_data_; }


void DailyStatisticsMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DailyStatisticsMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const DailyStatisticsMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyStatisticsMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_day().empty()) {
    _this->_internal_set_day(from._internal_day());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_createdprojectnumber() != 0) {
    _this->_internal_set_createdprojectnumber(from._internal_createdprojectnumber());
  }
  if (from._internal_createdswcnumber() != 0) {
    _this->_internal_set_createdswcnumber(from._internal_createdswcnumber());
  }
  if (from._internal_createswcnodenumber() != 0) {
    _this->_internal_set_createswcnodenumber(from._internal_createswcnodenumber());
  }
  if (from._internal_deletedprojectnumber() != 0) {
    _this->_internal_set_deletedprojectnumber(from._internal_deletedprojectnumber());
  }
  if (from._internal_deletedswcnumber() != 0) {
    _this->_internal_set_deletedswcnumber(from._internal_deletedswcnumber());
  }
  if (from._internal_deletedswcnodenumber() != 0) {
    _this->_internal_set_deletedswcnodenumber(from._internal_deletedswcnodenumber());
  }
  if (from._internal_modifiedprojectnumber() != 0) {
    _this->_internal_set_modifiedprojectnumber(from._internal_modifiedprojectnumber());
  }
  if (from._internal_modifiedswcnumber() != 0) {
    _this->_internal_set_modifiedswcnumber(from._internal_modifiedswcnumber());
  }
  if (from._internal_modifiedswcnodenumber() != 0) {
    _this->_internal_set_modifiedswcnodenumber(from._internal_modifiedswcnodenumber());
  }
  if (from._internal_projectquerynumber() != 0) {
    _this->_internal_set_projectquerynumber(from._internal_projectquerynumber());
  }
  if (from._internal_swcquerynumber() != 0) {
    _this->_internal_set_swcquerynumber(from._internal_swcquerynumber());
  }
  if (from._internal_nodequerynumber() != 0) {
    _this->_internal_set_nodequerynumber(from._internal_nodequerynumber());
  }
  if (from._internal_activeusernumber() != 0) {
    _this->_internal_set_activeusernumber(from._internal_activeusernumber());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DailyStatisticsMetaInfoV1::CopyFrom(const DailyStatisticsMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyStatisticsMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyStatisticsMetaInfoV1::IsInitialized() const {
  return true;
}

void DailyStatisticsMetaInfoV1::InternalSwap(DailyStatisticsMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.day_, lhs_arena,
      &other->_impl_.day_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyStatisticsMetaInfoV1, _impl_.activeusernumber_)
      + sizeof(DailyStatisticsMetaInfoV1::_impl_.activeusernumber_)
      - PROTOBUF_FIELD_OFFSET(DailyStatisticsMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyStatisticsMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[10]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::MetaInfoBase*
Arena::CreateMaybeMessage< ::proto::MetaInfoBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::MetaInfoBase >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::UserMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GlobalPermissionMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::GlobalPermissionMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GlobalPermissionMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ProjectPermissionMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::ProjectPermissionMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ProjectPermissionMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::PermissionGroupMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::PermissionGroupMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::PermissionGroupMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserPermissionOverrideMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::UserPermissionOverrideMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserPermissionOverrideMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ProjectMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::ProjectMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ProjectMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcNodeDataV1*
Arena::CreateMaybeMessage< ::proto::SwcNodeDataV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcNodeDataV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcDataV1*
Arena::CreateMaybeMessage< ::proto::SwcDataV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcDataV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DailyStatisticsMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::DailyStatisticsMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DailyStatisticsMetaInfoV1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
